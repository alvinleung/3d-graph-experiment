{"mappings":"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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-dbc7130ea8e09dd4.js","src/app.ts","node_modules/ogl/src/index.js","node_modules/ogl/src/core/Geometry.js","node_modules/ogl/src/math/Vec3.js","node_modules/ogl/src/math/functions/Vec3Func.js","node_modules/@parcel/transformer-js/src/esmodule-helpers.js","node_modules/ogl/src/core/Program.js","node_modules/ogl/src/core/Renderer.js","node_modules/ogl/src/core/Camera.js","node_modules/ogl/src/core/Transform.js","node_modules/ogl/src/math/Quat.js","node_modules/ogl/src/math/functions/QuatFunc.js","node_modules/ogl/src/math/functions/Vec4Func.js","node_modules/ogl/src/math/Mat4.js","node_modules/ogl/src/math/functions/Mat4Func.js","node_modules/ogl/src/math/Euler.js","node_modules/ogl/src/math/functions/EulerFunc.js","node_modules/ogl/src/core/Mesh.js","node_modules/ogl/src/math/Mat3.js","node_modules/ogl/src/math/functions/Mat3Func.js","node_modules/ogl/src/core/Texture.js","node_modules/ogl/src/math/Color.js","node_modules/ogl/src/math/functions/ColorFunc.js","node_modules/ogl/src/math/Vec2.js","node_modules/ogl/src/math/functions/Vec2Func.js","node_modules/ogl/src/extras/Plane.js","node_modules/ogl/src/extras/Orbit.js","node_modules/ogl/src/extras/Polyline.js","src/asset-loader.ts","node_modules/@parcel/runtime-js/lib/runtime-2b41cadfa0ca4d63.js","node_modules/@parcel/runtime-js/lib/helpers/bundle-url.js","node_modules/@parcel/runtime-js/lib/runtime-ca3043e135216e57.js","src/PlotLine/PlotLine.ts","src/PlotLine/PlotLine.frag","src/PlotLine/PlotLine.vert","src/PlotLine/PlotLineGlow.frag","node_modules/simplex-noise/dist/esm/simplex-noise.js","node_modules/simplex-noise/simplex-noise.ts","src/default.vert","src/Grid/Grid.ts","src/Grid/Grid.frag","src/Grid/Grid.vert"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d6ea1d42532a7575\";var HMR_USE_SSE = false;module.bundle.HMR_BUNDLE_ID = \"0cf78e626b815632\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, HMR_USE_SSE, chrome, browser, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: {|[string]: mixed|};\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var HMR_USE_SSE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData[moduleName],\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData[moduleName] = undefined;\n}\nmodule.bundle.Module = Module;\nmodule.bundle.hotData = {};\nvar checkedAssets /*: {|[string]: boolean|} */, disposedAssets /*: {|[string]: boolean|} */, assetsToDispose /*: Array<[ParcelRequire, string]> */, assetsToAccept /*: Array<[ParcelRequire, string]> */;\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\nfunction getPort() {\n  return HMR_PORT || location.port;\n}\n\n// eslint-disable-next-line no-redeclare\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !['localhost', '127.0.0.1', '0.0.0.0'].includes(hostname) ? 'wss' : 'ws';\n  var ws;\n  if (HMR_USE_SSE) {\n    ws = new EventSource('/__parcel_hmr');\n  } else {\n    try {\n      ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/');\n    } catch (err) {\n      if (err.message) {\n        console.error(err.message);\n      }\n      ws = {};\n    }\n  }\n\n  // Web extension context\n  var extCtx = typeof browser === 'undefined' ? typeof chrome === 'undefined' ? null : chrome : browser;\n\n  // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n  var supportsSourceURL = false;\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  }\n\n  // $FlowFixMe\n  ws.onmessage = async function (event /*: {data: string, ...} */) {\n    checkedAssets = {} /*: {|[string]: boolean|} */;\n    disposedAssets = {} /*: {|[string]: boolean|} */;\n    assetsToAccept = [];\n    assetsToDispose = [];\n    var data /*: HMRMessage */ = JSON.parse(event.data);\n    if (data.type === 'reload') {\n      fullReload();\n    } else if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n      let assets = data.assets.filter(asset => asset.envHash === HMR_ENV_HASH);\n\n      // Handle HMR Update\n      let handled = assets.every(asset => {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n      if (handled) {\n        console.clear();\n\n        // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n        if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n          window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n        }\n        await hmrApplyUpdates(assets);\n        hmrDisposeQueue();\n\n        // Run accept callbacks. This will also re-execute other disposed assets in topological order.\n        let processedAssets = {};\n        for (let i = 0; i < assetsToAccept.length; i++) {\n          let id = assetsToAccept[i][1];\n          if (!processedAssets[id]) {\n            hmrAccept(assetsToAccept[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n      } else fullReload();\n    }\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      for (let ansiDiagnostic of data.diagnostics.ansi) {\n        let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n        console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n      }\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html);\n        // $FlowFixMe\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n  if (ws instanceof WebSocket) {\n    ws.onerror = function (e) {\n      if (e.message) {\n        console.error(e.message);\n      }\n    };\n    ws.onclose = function () {\n      console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n    };\n  }\n}\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\nfunction fullReload() {\n  if ('reload' in location) {\n    location.reload();\n  } else if (extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  }\n}\nfunction getParents(bundle, id) /*: Array<[ParcelRequire, string]> */{\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n  var parents = [];\n  var k, d, dep;\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n  return parents;\n}\nfunction updateLink(link) {\n  var href = link.getAttribute('href');\n  if (!href) {\n    return;\n  }\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n  newLink.setAttribute('href',\n  // $FlowFixMe\n  href.split('?')[0] + '?' + Date.now());\n  // $FlowFixMe\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href /*: string */ = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n    cssTimeout = null;\n  }, 50);\n}\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n      return new Promise((resolve, reject) => {\n        var _document$head;\n        script.onload = () => resolve(script);\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 || _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension fix\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3 && typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n            extCtx.runtime.reload();\n            return;\n          }\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n          (_document$head2 = document.head) === null || _document$head2 === void 0 || _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\nfunction hmrApply(bundle /*: ParcelRequire */, asset /*:  HMRAsset */) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      }\n\n      // $FlowFixMe\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    }\n\n    // Always traverse to the parent bundle, even if we already replaced the asset in this bundle.\n    // This is required in case modules are duplicated. We need to ensure all instances have the updated code.\n    if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    }\n\n    // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n    delete modules[id];\n    delete bundle.cache[id];\n\n    // Now delete the orphans.\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\nfunction hmrAcceptCheck(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  }\n\n  // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n      parents.push(...p);\n    }\n  }\n  return accepted;\n}\nfunction hmrAcceptCheckOne(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n  if (checkedAssets[id]) {\n    return true;\n  }\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToDispose.push([bundle, id]);\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    assetsToAccept.push([bundle, id]);\n    return true;\n  }\n}\nfunction hmrDisposeQueue() {\n  // Dispose all old assets.\n  for (let i = 0; i < assetsToDispose.length; i++) {\n    let id = assetsToDispose[i][1];\n    if (!disposedAssets[id]) {\n      hmrDispose(assetsToDispose[i][0], id);\n      disposedAssets[id] = true;\n    }\n  }\n  assetsToDispose = [];\n}\nfunction hmrDispose(bundle /*: ParcelRequire */, id /*: string */) {\n  var cached = bundle.cache[id];\n  bundle.hotData[id] = {};\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData[id];\n  }\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData[id]);\n    });\n  }\n  delete bundle.cache[id];\n}\nfunction hmrAccept(bundle /*: ParcelRequire */, id /*: string */) {\n  // Execute the module.\n  bundle(id);\n\n  // Run the accept callbacks in the new version of the module.\n  var cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    let assetsToAlsoAccept = [];\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      let additionalAssets = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n      if (Array.isArray(additionalAssets) && additionalAssets.length) {\n        assetsToAlsoAccept.push(...additionalAssets);\n      }\n    });\n    if (assetsToAlsoAccept.length) {\n      let handled = assetsToAlsoAccept.every(function (a) {\n        return hmrAcceptCheck(a[0], a[1]);\n      });\n      if (!handled) {\n        return fullReload();\n      }\n      hmrDisposeQueue();\n    }\n  }\n}","import {\n  Camera,\n  Color,\n  Euler,\n  Mat4,\n  Mesh,\n  Orbit,\n  Path,\n  Plane,\n  Polyline,\n  Program,\n  Raycast,\n  Renderer,\n  Transform,\n  Vec2,\n  Vec3,\n} from \"ogl\";\n\nimport { loadAssets } from \"./asset-loader\";\nimport LINE_VERT from \"./line.vert\";\nimport DEFAULT_VERT from \"./default.vert\";\nimport DEFAULT_FRAG from \"./default.frag\";\nimport { PlotLine } from \"./PlotLine/PlotLine\";\nimport { Grid } from \"./Grid/Grid\";\n\nconst renderer = new Renderer();\nconst gl = renderer.gl;\ndocument.body.appendChild(gl.canvas);\n\nconst camera = new Camera(gl);\ncamera.position.z = 2;\n\n// ==================================================\n// Canvas resize\n// ==================================================\nfunction resize() {\n  renderer.dpr = window.devicePixelRatio;\n  renderer.setSize(window.innerWidth, window.innerHeight);\n  camera.perspective({\n    aspect: gl.canvas.width / gl.canvas.height,\n  });\n}\nwindow.addEventListener(\"resize\", resize, false);\nresize();\n\n// ==================================================\n\nloadAssets({\n  grid: new URL(\"assets/grid.png\", import.meta.url),\n  gridBlur: new URL(\"assets/grid-blur.png\", import.meta.url),\n}).then((assets) => {\n  const scene = new Transform();\n\n  // orbit\n  const orbit = new Orbit(camera, {\n    target: new Vec3(0, 0, 0),\n    // enableZoom: false,\n    enablePan: true,\n    element: gl.canvas,\n  });\n\n  const grid = new Grid({ gl, scene, image: assets.grid });\n\n  const plotLines: PlotLine[] = [];\n  for (let i = 0; i < 3; i++) {\n    const lineOffset = 0.5;\n    plotLines.push(\n      new PlotLine({\n        gl,\n        scene,\n        position: new Vec3(-2.5, -0.1, -i * lineOffset + 0.2),\n      }),\n    );\n  }\n\n  function update(time: number) {\n    renderer.gl.clearColor(254 / 255, 255 / 255, 250 / 255, 1.0);\n    orbit.update();\n    plotLines.forEach((line) => line.update());\n    grid.update();\n\n    // render to screen\n    renderer.render({ scene, camera });\n    requestAnimationFrame(update);\n  }\n\n  requestAnimationFrame(update);\n});\n","// Core\nexport { Geometry } from './core/Geometry.js';\nexport { Program } from './core/Program.js';\nexport { Renderer } from './core/Renderer.js';\nexport { Camera } from './core/Camera.js';\nexport { Transform } from './core/Transform.js';\nexport { Mesh } from './core/Mesh.js';\nexport { Texture } from './core/Texture.js';\nexport { RenderTarget } from './core/RenderTarget.js';\n\n// Maths\nexport { Color } from './math/Color.js';\nexport { Euler } from './math/Euler.js';\nexport { Mat3 } from './math/Mat3.js';\nexport { Mat4 } from './math/Mat4.js';\nexport { Quat } from './math/Quat.js';\nexport { Vec2 } from './math/Vec2.js';\nexport { Vec3 } from './math/Vec3.js';\nexport { Vec4 } from './math/Vec4.js';\n\n// Extras\nexport { Plane } from './extras/Plane.js';\nexport { Box } from './extras/Box.js';\nexport { Sphere } from './extras/Sphere.js';\nexport { Cylinder } from './extras/Cylinder.js';\nexport { Triangle } from './extras/Triangle.js';\nexport { Torus } from './extras/Torus.js';\nexport { Orbit } from './extras/Orbit.js';\nexport { Raycast } from './extras/Raycast.js';\nexport { Curve } from './extras/Curve.js';\nexport { Path } from './extras/path/Path.js';\nexport { Tube } from './extras/Tube.js';\nexport { Post } from './extras/Post.js';\nexport { Skin } from './extras/Skin.js';\nexport { Animation } from './extras/Animation.js';\nexport { Text } from './extras/Text.js';\nexport { NormalProgram } from './extras/NormalProgram.js';\nexport { Flowmap } from './extras/Flowmap.js';\nexport { GPGPU } from './extras/GPGPU.js';\nexport { Polyline } from './extras/Polyline.js';\nexport { Shadow } from './extras/Shadow.js';\nexport { KTXTexture } from './extras/KTXTexture.js';\nexport { TextureLoader } from './extras/TextureLoader.js';\nexport { GLTFLoader } from './extras/GLTFLoader.js';\nexport { GLTFSkin } from './extras/GLTFSkin.js';\nexport { GLTFAnimation } from './extras/GLTFAnimation.js';\nexport { DracoManager } from './extras/DracoManager.js';\nexport { BasisManager } from './extras/BasisManager.js';\nexport { WireMesh } from './extras/WireMesh.js';\nexport { AxesHelper } from './extras/helpers/AxesHelper.js';\nexport { GridHelper } from './extras/helpers/GridHelper.js';\nexport { VertexNormalsHelper } from './extras/helpers/VertexNormalsHelper.js';\nexport { FaceNormalsHelper } from './extras/helpers/FaceNormalsHelper.js';\nexport { InstancedMesh } from './extras/InstancedMesh.js';\nexport { Texture3D } from './extras/Texture3D.js';\n","// attribute params\n// {\n//     data - typed array eg UInt16Array for indices, Float32Array\n//     size - int default 1\n//     instanced - default null. Pass divisor amount\n//     type - gl enum default gl.UNSIGNED_SHORT for 'index', gl.FLOAT for others\n//     normalized - boolean default false\n\n//     buffer - gl buffer, if buffer exists, don't need to provide data - although needs position data for bounds calculation\n//     stride - default 0 - for when passing in buffer\n//     offset - default 0 - for when passing in buffer\n//     count - default null - for when passing in buffer\n//     min - array - for when passing in buffer\n//     max - array - for when passing in buffer\n// }\n\n// TODO: fit in transform feedback\n\nimport { Vec3 } from '../math/Vec3.js';\n\nconst tempVec3 = /* @__PURE__ */ new Vec3();\n\nlet ID = 1;\nlet ATTR_ID = 1;\n\n// To stop inifinite warnings\nlet isBoundsWarned = false;\n\nexport class Geometry {\n    constructor(gl, attributes = {}) {\n        if (!gl.canvas) console.error('gl not passed as first argument to Geometry');\n        this.gl = gl;\n        this.attributes = attributes;\n        this.id = ID++;\n\n        // Store one VAO per program attribute locations order\n        this.VAOs = {};\n\n        this.drawRange = { start: 0, count: 0 };\n        this.instancedCount = 0;\n\n        // Unbind current VAO so that new buffers don't get added to active mesh\n        this.gl.renderer.bindVertexArray(null);\n        this.gl.renderer.currentGeometry = null;\n\n        // Alias for state store to avoid redundant calls for global state\n        this.glState = this.gl.renderer.state;\n\n        // create the buffers\n        for (let key in attributes) {\n            this.addAttribute(key, attributes[key]);\n        }\n    }\n\n    addAttribute(key, attr) {\n        this.attributes[key] = attr;\n\n        // Set options\n        attr.id = ATTR_ID++; // TODO: currently unused, remove?\n        attr.size = attr.size || 1;\n        attr.type =\n            attr.type ||\n            (attr.data.constructor === Float32Array\n                ? this.gl.FLOAT\n                : attr.data.constructor === Uint16Array\n                ? this.gl.UNSIGNED_SHORT\n                : this.gl.UNSIGNED_INT); // Uint32Array\n        attr.target = key === 'index' ? this.gl.ELEMENT_ARRAY_BUFFER : this.gl.ARRAY_BUFFER;\n        attr.normalized = attr.normalized || false;\n        attr.stride = attr.stride || 0;\n        attr.offset = attr.offset || 0;\n        attr.count = attr.count || (attr.stride ? attr.data.byteLength / attr.stride : attr.data.length / attr.size);\n        attr.divisor = attr.instanced || 0;\n        attr.needsUpdate = false;\n        attr.usage = attr.usage || this.gl.STATIC_DRAW;\n\n        if (!attr.buffer) {\n            // Push data to buffer\n            this.updateAttribute(attr);\n        }\n\n        // Update geometry counts. If indexed, ignore regular attributes\n        if (attr.divisor) {\n            this.isInstanced = true;\n            if (this.instancedCount && this.instancedCount !== attr.count * attr.divisor) {\n                console.warn('geometry has multiple instanced buffers of different length');\n                return (this.instancedCount = Math.min(this.instancedCount, attr.count * attr.divisor));\n            }\n            this.instancedCount = attr.count * attr.divisor;\n        } else if (key === 'index') {\n            this.drawRange.count = attr.count;\n        } else if (!this.attributes.index) {\n            this.drawRange.count = Math.max(this.drawRange.count, attr.count);\n        }\n    }\n\n    updateAttribute(attr) {\n        const isNewBuffer = !attr.buffer;\n        if (isNewBuffer) attr.buffer = this.gl.createBuffer();\n        if (this.glState.boundBuffer !== attr.buffer) {\n            this.gl.bindBuffer(attr.target, attr.buffer);\n            this.glState.boundBuffer = attr.buffer;\n        }\n        if (isNewBuffer) {\n            this.gl.bufferData(attr.target, attr.data, attr.usage);\n        } else {\n            this.gl.bufferSubData(attr.target, 0, attr.data);\n        }\n        attr.needsUpdate = false;\n    }\n\n    setIndex(value) {\n        this.addAttribute('index', value);\n    }\n\n    setDrawRange(start, count) {\n        this.drawRange.start = start;\n        this.drawRange.count = count;\n    }\n\n    setInstancedCount(value) {\n        this.instancedCount = value;\n    }\n\n    createVAO(program) {\n        this.VAOs[program.attributeOrder] = this.gl.renderer.createVertexArray();\n        this.gl.renderer.bindVertexArray(this.VAOs[program.attributeOrder]);\n        this.bindAttributes(program);\n    }\n\n    bindAttributes(program) {\n        // Link all attributes to program using gl.vertexAttribPointer\n        program.attributeLocations.forEach((location, { name, type }) => {\n            // If geometry missing a required shader attribute\n            if (!this.attributes[name]) {\n                console.warn(`active attribute ${name} not being supplied`);\n                return;\n            }\n\n            const attr = this.attributes[name];\n\n            this.gl.bindBuffer(attr.target, attr.buffer);\n            this.glState.boundBuffer = attr.buffer;\n\n            // For matrix attributes, buffer needs to be defined per column\n            let numLoc = 1;\n            if (type === 35674) numLoc = 2; // mat2\n            if (type === 35675) numLoc = 3; // mat3\n            if (type === 35676) numLoc = 4; // mat4\n\n            const size = attr.size / numLoc;\n            const stride = numLoc === 1 ? 0 : numLoc * numLoc * 4;\n            const offset = numLoc === 1 ? 0 : numLoc * 4;\n\n            for (let i = 0; i < numLoc; i++) {\n                this.gl.vertexAttribPointer(location + i, size, attr.type, attr.normalized, attr.stride + stride, attr.offset + i * offset);\n                this.gl.enableVertexAttribArray(location + i);\n\n                // For instanced attributes, divisor needs to be set.\n                // For firefox, need to set back to 0 if non-instanced drawn after instanced. Else won't render\n                this.gl.renderer.vertexAttribDivisor(location + i, attr.divisor);\n            }\n        });\n\n        // Bind indices if geometry indexed\n        if (this.attributes.index) this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.attributes.index.buffer);\n    }\n\n    draw({ program, mode = this.gl.TRIANGLES }) {\n        if (this.gl.renderer.currentGeometry !== `${this.id}_${program.attributeOrder}`) {\n            if (!this.VAOs[program.attributeOrder]) this.createVAO(program);\n            this.gl.renderer.bindVertexArray(this.VAOs[program.attributeOrder]);\n            this.gl.renderer.currentGeometry = `${this.id}_${program.attributeOrder}`;\n        }\n\n        // Check if any attributes need updating\n        program.attributeLocations.forEach((location, { name }) => {\n            const attr = this.attributes[name];\n            if (attr.needsUpdate) this.updateAttribute(attr);\n        });\n\n        // For drawElements, offset needs to be multiple of type size\n        let indexBytesPerElement = 2;\n        if (this.attributes.index?.type === this.gl.UNSIGNED_INT) indexBytesPerElement = 4;\n\n        if (this.isInstanced) {\n            if (this.attributes.index) {\n                this.gl.renderer.drawElementsInstanced(\n                    mode,\n                    this.drawRange.count,\n                    this.attributes.index.type,\n                    this.attributes.index.offset + this.drawRange.start * indexBytesPerElement,\n                    this.instancedCount\n                );\n            } else {\n                this.gl.renderer.drawArraysInstanced(mode, this.drawRange.start, this.drawRange.count, this.instancedCount);\n            }\n        } else {\n            if (this.attributes.index) {\n                this.gl.drawElements(\n                    mode,\n                    this.drawRange.count,\n                    this.attributes.index.type,\n                    this.attributes.index.offset + this.drawRange.start * indexBytesPerElement\n                );\n            } else {\n                this.gl.drawArrays(mode, this.drawRange.start, this.drawRange.count);\n            }\n        }\n    }\n\n    getPosition() {\n        // Use position buffer, or min/max if available\n        const attr = this.attributes.position;\n        // if (attr.min) return [...attr.min, ...attr.max];\n        if (attr.data) return attr;\n        if (isBoundsWarned) return;\n        console.warn('No position buffer data found to compute bounds');\n        return (isBoundsWarned = true);\n    }\n\n    computeBoundingBox(attr) {\n        if (!attr) attr = this.getPosition();\n        const array = attr.data;\n        // Data loaded shouldn't haave stride, only buffers\n        // const stride = attr.stride ? attr.stride / array.BYTES_PER_ELEMENT : attr.size;\n        const stride = attr.size;\n\n        if (!this.bounds) {\n            this.bounds = {\n                min: new Vec3(),\n                max: new Vec3(),\n                center: new Vec3(),\n                scale: new Vec3(),\n                radius: Infinity,\n            };\n        }\n\n        const min = this.bounds.min;\n        const max = this.bounds.max;\n        const center = this.bounds.center;\n        const scale = this.bounds.scale;\n\n        min.set(+Infinity);\n        max.set(-Infinity);\n\n        // TODO: check size of position (eg triangle with Vec2)\n        for (let i = 0, l = array.length; i < l; i += stride) {\n            const x = array[i];\n            const y = array[i + 1];\n            const z = array[i + 2];\n\n            min.x = Math.min(x, min.x);\n            min.y = Math.min(y, min.y);\n            min.z = Math.min(z, min.z);\n\n            max.x = Math.max(x, max.x);\n            max.y = Math.max(y, max.y);\n            max.z = Math.max(z, max.z);\n        }\n\n        scale.sub(max, min);\n        center.add(min, max).divide(2);\n    }\n\n    computeBoundingSphere(attr) {\n        if (!attr) attr = this.getPosition();\n        const array = attr.data;\n        // Data loaded shouldn't haave stride, only buffers\n        // const stride = attr.stride ? attr.stride / array.BYTES_PER_ELEMENT : attr.size;\n        const stride = attr.size;\n\n        if (!this.bounds) this.computeBoundingBox(attr);\n\n        let maxRadiusSq = 0;\n        for (let i = 0, l = array.length; i < l; i += stride) {\n            tempVec3.fromArray(array, i);\n            maxRadiusSq = Math.max(maxRadiusSq, this.bounds.center.squaredDistance(tempVec3));\n        }\n\n        this.bounds.radius = Math.sqrt(maxRadiusSq);\n    }\n\n    remove() {\n        for (let key in this.VAOs) {\n            this.gl.renderer.deleteVertexArray(this.VAOs[key]);\n            delete this.VAOs[key];\n        }\n        for (let key in this.attributes) {\n            this.gl.deleteBuffer(this.attributes[key].buffer);\n            delete this.attributes[key];\n        }\n    }\n}\n","import * as Vec3Func from './functions/Vec3Func.js';\n\nexport class Vec3 extends Array {\n    constructor(x = 0, y = x, z = x) {\n        super(x, y, z);\n        return this;\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    get z() {\n        return this[2];\n    }\n\n    set x(v) {\n        this[0] = v;\n    }\n\n    set y(v) {\n        this[1] = v;\n    }\n\n    set z(v) {\n        this[2] = v;\n    }\n\n    set(x, y = x, z = x) {\n        if (x.length) return this.copy(x);\n        Vec3Func.set(this, x, y, z);\n        return this;\n    }\n\n    copy(v) {\n        Vec3Func.copy(this, v);\n        return this;\n    }\n\n    add(va, vb) {\n        if (vb) Vec3Func.add(this, va, vb);\n        else Vec3Func.add(this, this, va);\n        return this;\n    }\n\n    sub(va, vb) {\n        if (vb) Vec3Func.subtract(this, va, vb);\n        else Vec3Func.subtract(this, this, va);\n        return this;\n    }\n\n    multiply(v) {\n        if (v.length) Vec3Func.multiply(this, this, v);\n        else Vec3Func.scale(this, this, v);\n        return this;\n    }\n\n    divide(v) {\n        if (v.length) Vec3Func.divide(this, this, v);\n        else Vec3Func.scale(this, this, 1 / v);\n        return this;\n    }\n\n    inverse(v = this) {\n        Vec3Func.inverse(this, v);\n        return this;\n    }\n\n    // Can't use 'length' as Array.prototype uses it\n    len() {\n        return Vec3Func.length(this);\n    }\n\n    distance(v) {\n        if (v) return Vec3Func.distance(this, v);\n        else return Vec3Func.length(this);\n    }\n\n    squaredLen() {\n        return Vec3Func.squaredLength(this);\n    }\n\n    squaredDistance(v) {\n        if (v) return Vec3Func.squaredDistance(this, v);\n        else return Vec3Func.squaredLength(this);\n    }\n\n    negate(v = this) {\n        Vec3Func.negate(this, v);\n        return this;\n    }\n\n    cross(va, vb) {\n        if (vb) Vec3Func.cross(this, va, vb);\n        else Vec3Func.cross(this, this, va);\n        return this;\n    }\n\n    scale(v) {\n        Vec3Func.scale(this, this, v);\n        return this;\n    }\n\n    normalize() {\n        Vec3Func.normalize(this, this);\n        return this;\n    }\n\n    dot(v) {\n        return Vec3Func.dot(this, v);\n    }\n\n    equals(v) {\n        return Vec3Func.exactEquals(this, v);\n    }\n\n    applyMatrix3(mat3) {\n        Vec3Func.transformMat3(this, this, mat3);\n        return this;\n    }\n\n    applyMatrix4(mat4) {\n        Vec3Func.transformMat4(this, this, mat4);\n        return this;\n    }\n\n    scaleRotateMatrix4(mat4) {\n        Vec3Func.scaleRotateMat4(this, this, mat4);\n        return this;\n    }\n\n    applyQuaternion(q) {\n        Vec3Func.transformQuat(this, this, q);\n        return this;\n    }\n\n    angle(v) {\n        return Vec3Func.angle(this, v);\n    }\n\n    lerp(v, t) {\n        Vec3Func.lerp(this, this, v, t);\n        return this;\n    }\n\n    smoothLerp(v, decay, dt) {\n        Vec3Func.smoothLerp(this, this, v, decay, dt);\n        return this;\n    }\n\n    clone() {\n        return new Vec3(this[0], this[1], this[2]);\n    }\n\n    fromArray(a, o = 0) {\n        this[0] = a[o];\n        this[1] = a[o + 1];\n        this[2] = a[o + 2];\n        return this;\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        a[o + 2] = this[2];\n        return a;\n    }\n\n    transformDirection(mat4) {\n        const x = this[0];\n        const y = this[1];\n        const z = this[2];\n\n        this[0] = mat4[0] * x + mat4[4] * y + mat4[8] * z;\n        this[1] = mat4[1] * x + mat4[5] * y + mat4[9] * z;\n        this[2] = mat4[2] * x + mat4[6] * y + mat4[10] * z;\n\n        return this.normalize();\n    }\n}\n","const EPSILON = 0.000001;\n\n/**\n * Calculates the length of a vec3\n *\n * @param {vec3} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    return Math.sqrt(x * x + y * y + z * z);\n}\n\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the source vector\n * @returns {vec3} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    return out;\n}\n\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\nexport function set(out, x, y, z) {\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    return out;\n}\n\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    return out;\n}\n\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function multiply(out, a, b) {\n    out[0] = a[0] * b[0];\n    out[1] = a[1] * b[1];\n    out[2] = a[2] * b[2];\n    return out;\n}\n\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function divide(out, a, b) {\n    out[0] = a[0] / b[0];\n    out[1] = a[1] / b[1];\n    out[2] = a[2] / b[2];\n    return out;\n}\n\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\nexport function scale(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n    let x = b[0] - a[0];\n    let y = b[1] - a[1];\n    let z = b[2] - a[2];\n    return Math.sqrt(x * x + y * y + z * z);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n    let x = b[0] - a[0];\n    let y = b[1] - a[1];\n    let z = b[2] - a[2];\n    return x * x + y * y + z * z;\n}\n\n/**\n * Calculates the squared length of a vec3\n *\n * @param {vec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength(a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    return x * x + y * y + z * z;\n}\n\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to negate\n * @returns {vec3} out\n */\nexport function negate(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    return out;\n}\n\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to invert\n * @returns {vec3} out\n */\nexport function inverse(out, a) {\n    out[0] = 1.0 / a[0];\n    out[1] = 1.0 / a[1];\n    out[2] = 1.0 / a[2];\n    return out;\n}\n\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to normalize\n * @returns {vec3} out\n */\nexport function normalize(out, a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    let len = x * x + y * y + z * z;\n    if (len > 0) {\n        //TODO: evaluate use of glm_invsqrt here?\n        len = 1 / Math.sqrt(len);\n    }\n    out[0] = a[0] * len;\n    out[1] = a[1] * len;\n    out[2] = a[2] * len;\n    return out;\n}\n\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function cross(out, a, b) {\n    let ax = a[0],\n        ay = a[1],\n        az = a[2];\n    let bx = b[0],\n        by = b[1],\n        bz = b[2];\n\n    out[0] = ay * bz - az * by;\n    out[1] = az * bx - ax * bz;\n    out[2] = ax * by - ay * bx;\n    return out;\n}\n\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec3} out\n */\nexport function lerp(out, a, b, t) {\n    let ax = a[0];\n    let ay = a[1];\n    let az = a[2];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    out[2] = az + t * (b[2] - az);\n    return out;\n}\n\n/**\n * Performs a frame rate independant, linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {Number} decay decay constant for interpolation. useful range between 1 and 25, from slow to fast.\n * @param {Number} dt delta time\n * @returns {vec3} out\n */\nexport function smoothLerp(out, a, b, decay, dt) {\n    const exp = Math.exp(-decay * dt);\n    let ax = a[0];\n    let ay = a[1];\n    let az = a[2];\n\n    out[0] = b[0] + (ax - b[0]) * exp;\n    out[1] = b[1] + (ay - b[1]) * exp;\n    out[2] = b[2] + (az - b[2]) * exp;\n    return out;\n}\n\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec3} out\n */\nexport function transformMat4(out, a, m) {\n    let x = a[0],\n        y = a[1],\n        z = a[2];\n    let w = m[3] * x + m[7] * y + m[11] * z + m[15];\n    w = w || 1.0;\n    out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n    out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n    out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n    return out;\n}\n\n/**\n * Same as above but doesn't apply translation.\n * Useful for rays.\n */\nexport function scaleRotateMat4(out, a, m) {\n    let x = a[0],\n        y = a[1],\n        z = a[2];\n    let w = m[3] * x + m[7] * y + m[11] * z + m[15];\n    w = w || 1.0;\n    out[0] = (m[0] * x + m[4] * y + m[8] * z) / w;\n    out[1] = (m[1] * x + m[5] * y + m[9] * z) / w;\n    out[2] = (m[2] * x + m[6] * y + m[10] * z) / w;\n    return out;\n}\n\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\nexport function transformMat3(out, a, m) {\n    let x = a[0],\n        y = a[1],\n        z = a[2];\n    out[0] = x * m[0] + y * m[3] + z * m[6];\n    out[1] = x * m[1] + y * m[4] + z * m[7];\n    out[2] = x * m[2] + y * m[5] + z * m[8];\n    return out;\n}\n\n/**\n * Transforms the vec3 with a quat\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {quat} q quaternion to transform with\n * @returns {vec3} out\n */\nexport function transformQuat(out, a, q) {\n    // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n\n    let x = a[0],\n        y = a[1],\n        z = a[2];\n    let qx = q[0],\n        qy = q[1],\n        qz = q[2],\n        qw = q[3];\n\n    let uvx = qy * z - qz * y;\n    let uvy = qz * x - qx * z;\n    let uvz = qx * y - qy * x;\n\n    let uuvx = qy * uvz - qz * uvy;\n    let uuvy = qz * uvx - qx * uvz;\n    let uuvz = qx * uvy - qy * uvx;\n\n    let w2 = qw * 2;\n    uvx *= w2;\n    uvy *= w2;\n    uvz *= w2;\n\n    uuvx *= 2;\n    uuvy *= 2;\n    uuvz *= 2;\n\n    out[0] = x + uvx + uuvx;\n    out[1] = y + uvy + uuvy;\n    out[2] = z + uvz + uuvz;\n    return out;\n}\n\n/**\n * Get the angle between two 3D vectors\n * @param {vec3} a The first operand\n * @param {vec3} b The second operand\n * @returns {Number} The angle in radians\n */\nexport const angle = (function () {\n    const tempA = [0, 0, 0];\n    const tempB = [0, 0, 0];\n\n    return function (a, b) {\n        copy(tempA, a);\n        copy(tempB, b);\n\n        normalize(tempA, tempA);\n        normalize(tempB, tempB);\n\n        let cosine = dot(tempA, tempB);\n\n        if (cosine > 1.0) {\n            return 0;\n        } else if (cosine < -1.0) {\n            return Math.PI;\n        } else {\n            return Math.acos(cosine);\n        }\n    };\n})();\n\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {vec3} a The first vector.\n * @param {vec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (\n      key === 'default' ||\n      key === '__esModule' ||\n      Object.prototype.hasOwnProperty.call(dest, key)\n    ) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n","// TODO: upload empty texture if null ? maybe not\n// TODO: upload identity matrix if null ?\n// TODO: sampler Cube\n\nlet ID = 1;\n\n// cache of typed arrays used to flatten uniform arrays\nconst arrayCacheF32 = {};\n\nexport class Program {\n    constructor(\n        gl,\n        {\n            vertex,\n            fragment,\n            uniforms = {},\n\n            transparent = false,\n            cullFace = gl.BACK,\n            frontFace = gl.CCW,\n            depthTest = true,\n            depthWrite = true,\n            depthFunc = gl.LEQUAL,\n        } = {}\n    ) {\n        if (!gl.canvas) console.error('gl not passed as first argument to Program');\n        this.gl = gl;\n        this.uniforms = uniforms;\n        this.id = ID++;\n\n        if (!vertex) console.warn('vertex shader not supplied');\n        if (!fragment) console.warn('fragment shader not supplied');\n\n        // Store program state\n        this.transparent = transparent;\n        this.cullFace = cullFace;\n        this.frontFace = frontFace;\n        this.depthTest = depthTest;\n        this.depthWrite = depthWrite;\n        this.depthFunc = depthFunc;\n        this.blendFunc = {};\n        this.blendEquation = {};\n        this.stencilFunc = {};\n        this.stencilOp = {}\n\n        // set default blendFunc if transparent flagged\n        if (this.transparent && !this.blendFunc.src) {\n            if (this.gl.renderer.premultipliedAlpha) this.setBlendFunc(this.gl.ONE, this.gl.ONE_MINUS_SRC_ALPHA);\n            else this.setBlendFunc(this.gl.SRC_ALPHA, this.gl.ONE_MINUS_SRC_ALPHA);\n        }\n\n        // Create empty shaders and attach to program\n        this.vertexShader = gl.createShader(gl.VERTEX_SHADER);\n        this.fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n        this.program = gl.createProgram();\n        gl.attachShader(this.program, this.vertexShader);\n        gl.attachShader(this.program, this.fragmentShader);\n\n        // Compile shaders with source\n        this.setShaders({ vertex, fragment });\n    }\n\n    setShaders({ vertex, fragment }) {\n        if (vertex) {\n            // compile vertex shader and log errors\n            this.gl.shaderSource(this.vertexShader, vertex);\n            this.gl.compileShader(this.vertexShader);\n            if (this.gl.getShaderInfoLog(this.vertexShader) !== '') {\n                console.warn(`${this.gl.getShaderInfoLog(this.vertexShader)}\\nVertex Shader\\n${addLineNumbers(vertex)}`);\n            }\n        }\n\n        if (fragment) {\n            // compile fragment shader and log errors\n            this.gl.shaderSource(this.fragmentShader, fragment);\n            this.gl.compileShader(this.fragmentShader);\n            if (this.gl.getShaderInfoLog(this.fragmentShader) !== '') {\n                console.warn(`${this.gl.getShaderInfoLog(this.fragmentShader)}\\nFragment Shader\\n${addLineNumbers(fragment)}`);\n            }\n        }\n\n        // compile program and log errors\n        this.gl.linkProgram(this.program);\n        if (!this.gl.getProgramParameter(this.program, this.gl.LINK_STATUS)) {\n            return console.warn(this.gl.getProgramInfoLog(this.program));\n        }\n\n        // Get active uniform locations\n        this.uniformLocations = new Map();\n        let numUniforms = this.gl.getProgramParameter(this.program, this.gl.ACTIVE_UNIFORMS);\n        for (let uIndex = 0; uIndex < numUniforms; uIndex++) {\n            let uniform = this.gl.getActiveUniform(this.program, uIndex);\n            this.uniformLocations.set(uniform, this.gl.getUniformLocation(this.program, uniform.name));\n\n            // split uniforms' names to separate array and struct declarations\n            const split = uniform.name.match(/(\\w+)/g);\n\n            uniform.uniformName = split[0];\n            uniform.nameComponents = split.slice(1);\n        }\n\n        // Get active attribute locations\n        this.attributeLocations = new Map();\n        const locations = [];\n        const numAttribs = this.gl.getProgramParameter(this.program, this.gl.ACTIVE_ATTRIBUTES);\n        for (let aIndex = 0; aIndex < numAttribs; aIndex++) {\n            const attribute = this.gl.getActiveAttrib(this.program, aIndex);\n            const location = this.gl.getAttribLocation(this.program, attribute.name);\n            // Ignore special built-in inputs. eg gl_VertexID, gl_InstanceID\n            if (location === -1) continue;\n            locations[location] = attribute.name;\n            this.attributeLocations.set(attribute, location);\n        }\n        this.attributeOrder = locations.join('');\n    }\n\n    setBlendFunc(src, dst, srcAlpha, dstAlpha) {\n        this.blendFunc.src = src;\n        this.blendFunc.dst = dst;\n        this.blendFunc.srcAlpha = srcAlpha;\n        this.blendFunc.dstAlpha = dstAlpha;\n        if (src) this.transparent = true;\n    }\n\n    setBlendEquation(modeRGB, modeAlpha) {\n        this.blendEquation.modeRGB = modeRGB;\n        this.blendEquation.modeAlpha = modeAlpha;\n    }\n\n    setStencilFunc(func, ref, mask) {\n        this.stencilRef = ref;\n        this.stencilFunc.func = func;\n        this.stencilFunc.ref = ref;\n        this.stencilFunc.mask = mask;\n    }\n\n    setStencilOp(stencilFail, depthFail, depthPass) {\n        this.stencilOp.stencilFail = stencilFail;\n        this.stencilOp.depthFail = depthFail;\n        this.stencilOp.depthPass = depthPass;\n    }\n\n    applyState() {\n        if (this.depthTest) this.gl.renderer.enable(this.gl.DEPTH_TEST);\n        else this.gl.renderer.disable(this.gl.DEPTH_TEST);\n\n        if (this.cullFace) this.gl.renderer.enable(this.gl.CULL_FACE);\n        else this.gl.renderer.disable(this.gl.CULL_FACE);\n\n        if (this.blendFunc.src) this.gl.renderer.enable(this.gl.BLEND);\n        else this.gl.renderer.disable(this.gl.BLEND);\n\n        if (this.cullFace) this.gl.renderer.setCullFace(this.cullFace);\n        this.gl.renderer.setFrontFace(this.frontFace);\n        this.gl.renderer.setDepthMask(this.depthWrite);\n        this.gl.renderer.setDepthFunc(this.depthFunc);\n        if (this.blendFunc.src) this.gl.renderer.setBlendFunc(this.blendFunc.src, this.blendFunc.dst, this.blendFunc.srcAlpha, this.blendFunc.dstAlpha);\n        this.gl.renderer.setBlendEquation(this.blendEquation.modeRGB, this.blendEquation.modeAlpha);\n\n        if(this.stencilFunc.func || this.stencilOp.stencilFail) this.gl.renderer.enable(this.gl.STENCIL_TEST)\n            else this.gl.renderer.disable(this.gl.STENCIL_TEST)\n\n        this.gl.renderer.setStencilFunc(this.stencilFunc.func, this.stencilFunc.ref, this.stencilFunc.mask)\n        this.gl.renderer.setStencilOp(this.stencilOp.stencilFail, this.stencilOp.depthFail, this.stencilOp.depthPass)\n\n    }\n\n    use({ flipFaces = false } = {}) {\n        let textureUnit = -1;\n        const programActive = this.gl.renderer.state.currentProgram === this.id;\n\n        // Avoid gl call if program already in use\n        if (!programActive) {\n            this.gl.useProgram(this.program);\n            this.gl.renderer.state.currentProgram = this.id;\n        }\n\n        // Set only the active uniforms found in the shader\n        this.uniformLocations.forEach((location, activeUniform) => {\n            let uniform = this.uniforms[activeUniform.uniformName];\n\n            for (const component of activeUniform.nameComponents) {\n                if (!uniform) break;\n\n                if (component in uniform) {\n                    uniform = uniform[component];\n                } else if (Array.isArray(uniform.value)) {\n                    break;\n                } else {\n                    uniform = undefined;\n                    break;\n                }\n            }\n\n            if (!uniform) {\n                return warn(`Active uniform ${activeUniform.name} has not been supplied`);\n            }\n\n            if (uniform && uniform.value === undefined) {\n                return warn(`${activeUniform.name} uniform is missing a value parameter`);\n            }\n\n            if (uniform.value.texture) {\n                textureUnit = textureUnit + 1;\n\n                // Check if texture needs to be updated\n                uniform.value.update(textureUnit);\n                return setUniform(this.gl, activeUniform.type, location, textureUnit);\n            }\n\n            // For texture arrays, set uniform as an array of texture units instead of just one\n            if (uniform.value.length && uniform.value[0].texture) {\n                const textureUnits = [];\n                uniform.value.forEach((value) => {\n                    textureUnit = textureUnit + 1;\n                    value.update(textureUnit);\n                    textureUnits.push(textureUnit);\n                });\n\n                return setUniform(this.gl, activeUniform.type, location, textureUnits);\n            }\n\n            setUniform(this.gl, activeUniform.type, location, uniform.value);\n        });\n\n        this.applyState();\n        if (flipFaces) this.gl.renderer.setFrontFace(this.frontFace === this.gl.CCW ? this.gl.CW : this.gl.CCW);\n    }\n\n    remove() {\n        this.gl.deleteProgram(this.program);\n    }\n}\n\nfunction setUniform(gl, type, location, value) {\n    value = value.length ? flatten(value) : value;\n    const setValue = gl.renderer.state.uniformLocations.get(location);\n\n    // Avoid redundant uniform commands\n    if (value.length) {\n        if (setValue === undefined || setValue.length !== value.length) {\n            // clone array to store as cache\n            gl.renderer.state.uniformLocations.set(location, value.slice(0));\n        } else {\n            if (arraysEqual(setValue, value)) return;\n\n            // Update cached array values\n            setValue.set ? setValue.set(value) : setArray(setValue, value);\n            gl.renderer.state.uniformLocations.set(location, setValue);\n        }\n    } else {\n        if (setValue === value) return;\n        gl.renderer.state.uniformLocations.set(location, value);\n    }\n\n    switch (type) {\n        case 5126:\n            return value.length ? gl.uniform1fv(location, value) : gl.uniform1f(location, value); // FLOAT\n        case 35664:\n            return gl.uniform2fv(location, value); // FLOAT_VEC2\n        case 35665:\n            return gl.uniform3fv(location, value); // FLOAT_VEC3\n        case 35666:\n            return gl.uniform4fv(location, value); // FLOAT_VEC4\n        case 35670: // BOOL\n        case 5124: // INT\n        case 35678: // SAMPLER_2D\n        case 36306: // U_SAMPLER_2D\n        case 35680: // SAMPLER_CUBE\n        case 36289: // SAMPLER_2D_ARRAY\n            return value.length ? gl.uniform1iv(location, value) : gl.uniform1i(location, value); // SAMPLER_CUBE\n        case 35671: // BOOL_VEC2\n        case 35667:\n            return gl.uniform2iv(location, value); // INT_VEC2\n        case 35672: // BOOL_VEC3\n        case 35668:\n            return gl.uniform3iv(location, value); // INT_VEC3\n        case 35673: // BOOL_VEC4\n        case 35669:\n            return gl.uniform4iv(location, value); // INT_VEC4\n        case 35674:\n            return gl.uniformMatrix2fv(location, false, value); // FLOAT_MAT2\n        case 35675:\n            return gl.uniformMatrix3fv(location, false, value); // FLOAT_MAT3\n        case 35676:\n            return gl.uniformMatrix4fv(location, false, value); // FLOAT_MAT4\n    }\n}\n\nfunction addLineNumbers(string) {\n    let lines = string.split('\\n');\n    for (let i = 0; i < lines.length; i++) {\n        lines[i] = i + 1 + ': ' + lines[i];\n    }\n    return lines.join('\\n');\n}\n\nfunction flatten(a) {\n    const arrayLen = a.length;\n    const valueLen = a[0].length;\n    if (valueLen === undefined) return a;\n    const length = arrayLen * valueLen;\n    let value = arrayCacheF32[length];\n    if (!value) arrayCacheF32[length] = value = new Float32Array(length);\n    for (let i = 0; i < arrayLen; i++) value.set(a[i], i * valueLen);\n    return value;\n}\n\nfunction arraysEqual(a, b) {\n    if (a.length !== b.length) return false;\n    for (let i = 0, l = a.length; i < l; i++) {\n        if (a[i] !== b[i]) return false;\n    }\n    return true;\n}\n\nfunction setArray(a, b) {\n    for (let i = 0, l = a.length; i < l; i++) {\n        a[i] = b[i];\n    }\n}\n\nlet warnCount = 0;\nfunction warn(message) {\n    if (warnCount > 100) return;\n    console.warn(message);\n    warnCount++;\n    if (warnCount > 100) console.warn('More than 100 program warnings - stopping logs.');\n}\n","import { Vec3 } from '../math/Vec3.js';\n\n// TODO: Handle context loss https://www.khronos.org/webgl/wiki/HandlingContextLost\n\n// Not automatic - devs to use these methods manually\n// gl.colorMask( colorMask, colorMask, colorMask, colorMask );\n// gl.clearColor( r, g, b, a );\n// gl.stencilMask( stencilMask );\n// gl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n// gl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n// gl.clearStencil( stencil );\n\nconst tempVec3 = /* @__PURE__ */ new Vec3();\nlet ID = 1;\n\nexport class Renderer {\n    constructor({\n        canvas = document.createElement('canvas'),\n        width = 300,\n        height = 150,\n        dpr = 1,\n        alpha = false,\n        depth = true,\n        stencil = false,\n        antialias = false,\n        premultipliedAlpha = false,\n        preserveDrawingBuffer = false,\n        powerPreference = 'default',\n        autoClear = true,\n        webgl = 2,\n    } = {}) {\n        const attributes = { alpha, depth, stencil, antialias, premultipliedAlpha, preserveDrawingBuffer, powerPreference };\n        this.dpr = dpr;\n        this.alpha = alpha;\n        this.color = true;\n        this.depth = depth;\n        this.stencil = stencil;\n        this.premultipliedAlpha = premultipliedAlpha;\n        this.autoClear = autoClear;\n        this.id = ID++;\n\n        // Attempt WebGL2 unless forced to 1, if not supported fallback to WebGL1\n        if (webgl === 2) this.gl = canvas.getContext('webgl2', attributes);\n        this.isWebgl2 = !!this.gl;\n        if (!this.gl) this.gl = canvas.getContext('webgl', attributes);\n        if (!this.gl) console.error('unable to create webgl context');\n\n        // Attach renderer to gl so that all classes have access to internal state functions\n        this.gl.renderer = this;\n\n        // initialise size values\n        this.setSize(width, height);\n\n        // gl state stores to avoid redundant calls on methods used internally\n        this.state = {};\n        this.state.blendFunc = { src: this.gl.ONE, dst: this.gl.ZERO };\n        this.state.blendEquation = { modeRGB: this.gl.FUNC_ADD };\n        this.state.cullFace = false;\n        this.state.frontFace = this.gl.CCW;\n        this.state.depthMask = true;\n        this.state.depthFunc = this.gl.LEQUAL;\n        this.state.premultiplyAlpha = false;\n        this.state.flipY = false;\n        this.state.unpackAlignment = 4;\n        this.state.framebuffer = null;\n        this.state.viewport = { x: 0, y: 0, width: null, height: null };\n        this.state.textureUnits = [];\n        this.state.activeTextureUnit = 0;\n        this.state.boundBuffer = null;\n        this.state.uniformLocations = new Map();\n        this.state.currentProgram = null;\n\n        // store requested extensions\n        this.extensions = {};\n\n        // Initialise extra format types\n        if (this.isWebgl2) {\n            this.getExtension('EXT_color_buffer_float');\n            this.getExtension('OES_texture_float_linear');\n        } else {\n            this.getExtension('OES_texture_float');\n            this.getExtension('OES_texture_float_linear');\n            this.getExtension('OES_texture_half_float');\n            this.getExtension('OES_texture_half_float_linear');\n            this.getExtension('OES_element_index_uint');\n            this.getExtension('OES_standard_derivatives');\n            this.getExtension('EXT_sRGB');\n            this.getExtension('WEBGL_depth_texture');\n            this.getExtension('WEBGL_draw_buffers');\n        }\n        this.getExtension('WEBGL_compressed_texture_astc');\n        this.getExtension('EXT_texture_compression_bptc');\n        this.getExtension('WEBGL_compressed_texture_s3tc');\n        this.getExtension('WEBGL_compressed_texture_etc1');\n        this.getExtension('WEBGL_compressed_texture_pvrtc');\n        this.getExtension('WEBKIT_WEBGL_compressed_texture_pvrtc');\n\n        // Create method aliases using extension (WebGL1) or native if available (WebGL2)\n        this.vertexAttribDivisor = this.getExtension('ANGLE_instanced_arrays', 'vertexAttribDivisor', 'vertexAttribDivisorANGLE');\n        this.drawArraysInstanced = this.getExtension('ANGLE_instanced_arrays', 'drawArraysInstanced', 'drawArraysInstancedANGLE');\n        this.drawElementsInstanced = this.getExtension('ANGLE_instanced_arrays', 'drawElementsInstanced', 'drawElementsInstancedANGLE');\n        this.createVertexArray = this.getExtension('OES_vertex_array_object', 'createVertexArray', 'createVertexArrayOES');\n        this.bindVertexArray = this.getExtension('OES_vertex_array_object', 'bindVertexArray', 'bindVertexArrayOES');\n        this.deleteVertexArray = this.getExtension('OES_vertex_array_object', 'deleteVertexArray', 'deleteVertexArrayOES');\n        this.drawBuffers = this.getExtension('WEBGL_draw_buffers', 'drawBuffers', 'drawBuffersWEBGL');\n\n        // Store device parameters\n        this.parameters = {};\n        this.parameters.maxTextureUnits = this.gl.getParameter(this.gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);\n        this.parameters.maxAnisotropy = this.getExtension('EXT_texture_filter_anisotropic')\n            ? this.gl.getParameter(this.getExtension('EXT_texture_filter_anisotropic').MAX_TEXTURE_MAX_ANISOTROPY_EXT)\n            : 0;\n    }\n\n    setSize(width, height) {\n        this.width = width;\n        this.height = height;\n\n        this.gl.canvas.width = width * this.dpr;\n        this.gl.canvas.height = height * this.dpr;\n\n        if (!this.gl.canvas.style) return;\n        Object.assign(this.gl.canvas.style, {\n            width: width + 'px',\n            height: height + 'px',\n        });\n    }\n\n    setViewport(width, height, x = 0, y = 0) {\n        if (this.state.viewport.width === width && this.state.viewport.height === height) return;\n        this.state.viewport.width = width;\n        this.state.viewport.height = height;\n        this.state.viewport.x = x;\n        this.state.viewport.y = y;\n        this.gl.viewport(x, y, width, height);\n    }\n\n    setScissor(width, height, x = 0, y = 0) {\n        this.gl.scissor(x, y, width, height);\n    }\n\n    enable(id) {\n        if (this.state[id] === true) return;\n        this.gl.enable(id);\n        this.state[id] = true;\n    }\n\n    disable(id) {\n        if (this.state[id] === false) return;\n        this.gl.disable(id);\n        this.state[id] = false;\n    }\n\n    setBlendFunc(src, dst, srcAlpha, dstAlpha) {\n        if (\n            this.state.blendFunc.src === src &&\n            this.state.blendFunc.dst === dst &&\n            this.state.blendFunc.srcAlpha === srcAlpha &&\n            this.state.blendFunc.dstAlpha === dstAlpha\n        )\n            return;\n        this.state.blendFunc.src = src;\n        this.state.blendFunc.dst = dst;\n        this.state.blendFunc.srcAlpha = srcAlpha;\n        this.state.blendFunc.dstAlpha = dstAlpha;\n        if (srcAlpha !== undefined) this.gl.blendFuncSeparate(src, dst, srcAlpha, dstAlpha);\n        else this.gl.blendFunc(src, dst);\n    }\n\n    setBlendEquation(modeRGB, modeAlpha) {\n        modeRGB = modeRGB || this.gl.FUNC_ADD;\n        if (this.state.blendEquation.modeRGB === modeRGB && this.state.blendEquation.modeAlpha === modeAlpha) return;\n        this.state.blendEquation.modeRGB = modeRGB;\n        this.state.blendEquation.modeAlpha = modeAlpha;\n        if (modeAlpha !== undefined) this.gl.blendEquationSeparate(modeRGB, modeAlpha);\n        else this.gl.blendEquation(modeRGB);\n    }\n\n    setCullFace(value) {\n        if (this.state.cullFace === value) return;\n        this.state.cullFace = value;\n        this.gl.cullFace(value);\n    }\n\n    setFrontFace(value) {\n        if (this.state.frontFace === value) return;\n        this.state.frontFace = value;\n        this.gl.frontFace(value);\n    }\n\n    setDepthMask(value) {\n        if (this.state.depthMask === value) return;\n        this.state.depthMask = value;\n        this.gl.depthMask(value);\n    }\n\n    setDepthFunc(value) {\n        if (this.state.depthFunc === value) return;\n        this.state.depthFunc = value;\n        this.gl.depthFunc(value);\n    }\n\n    setStencilMask(value) {\n        if(this.state.stencilMask === value) return;\n        this.state.stencilMask = value;\n        this.gl.stencilMask(value)\n    }\n\n    setStencilFunc(func, ref, mask) {\n\n        if((this.state.stencilFunc === func) &&\n            (this.state.stencilRef === ref) &&\n            (this.state.stencilFuncMask === mask)\n        ) return;\n\n        this.state.stencilFunc = func || this.gl.ALWAYS;\n        this.state.stencilRef = ref || 0;\n        this.state.stencilFuncMask = mask || 0;\n\n        this.gl.stencilFunc(func || this.gl.ALWAYS, ref || 0, mask || 0);\n    }\n\n    setStencilOp(stencilFail, depthFail, depthPass) {\n\n        if(this.state.stencilFail === stencilFail &&\n            this.state.stencilDepthFail === depthFail &&\n            this.state.stencilDepthPass === depthPass\n        ) return;\n\n        this.state.stencilFail = stencilFail;\n        this.state.stencilDepthFail = depthFail;\n        this.state.stencilDepthPass = depthPass;\n        \n        this.gl.stencilOp(stencilFail, depthFail, depthPass);\n        \n    }\n\n    activeTexture(value) {\n        if (this.state.activeTextureUnit === value) return;\n        this.state.activeTextureUnit = value;\n        this.gl.activeTexture(this.gl.TEXTURE0 + value);\n    }\n\n    bindFramebuffer({ target = this.gl.FRAMEBUFFER, buffer = null } = {}) {\n        if (this.state.framebuffer === buffer) return;\n        this.state.framebuffer = buffer;\n        this.gl.bindFramebuffer(target, buffer);\n    }\n\n    getExtension(extension, webgl2Func, extFunc) {\n        // if webgl2 function supported, return func bound to gl context\n        if (webgl2Func && this.gl[webgl2Func]) return this.gl[webgl2Func].bind(this.gl);\n\n        // fetch extension once only\n        if (!this.extensions[extension]) {\n            this.extensions[extension] = this.gl.getExtension(extension);\n        }\n\n        // return extension if no function requested\n        if (!webgl2Func) return this.extensions[extension];\n\n        // Return null if extension not supported\n        if (!this.extensions[extension]) return null;\n\n        // return extension function, bound to extension\n        return this.extensions[extension][extFunc].bind(this.extensions[extension]);\n    }\n\n    sortOpaque(a, b) {\n        if (a.renderOrder !== b.renderOrder) {\n            return a.renderOrder - b.renderOrder;\n        } else if (a.program.id !== b.program.id) {\n            return a.program.id - b.program.id;\n        } else if (a.zDepth !== b.zDepth) {\n            return a.zDepth - b.zDepth;\n        } else {\n            return b.id - a.id;\n        }\n    }\n\n    sortTransparent(a, b) {\n        if (a.renderOrder !== b.renderOrder) {\n            return a.renderOrder - b.renderOrder;\n        }\n        if (a.zDepth !== b.zDepth) {\n            return b.zDepth - a.zDepth;\n        } else {\n            return b.id - a.id;\n        }\n    }\n\n    sortUI(a, b) {\n        if (a.renderOrder !== b.renderOrder) {\n            return a.renderOrder - b.renderOrder;\n        } else if (a.program.id !== b.program.id) {\n            return a.program.id - b.program.id;\n        } else {\n            return b.id - a.id;\n        }\n    }\n\n    getRenderList({ scene, camera, frustumCull, sort }) {\n        let renderList = [];\n\n        if (camera && frustumCull) camera.updateFrustum();\n\n        // Get visible\n        scene.traverse((node) => {\n            if (!node.visible) return true;\n            if (!node.draw) return;\n\n            if (frustumCull && node.frustumCulled && camera) {\n                if (!camera.frustumIntersectsMesh(node)) return;\n            }\n\n            renderList.push(node);\n        });\n\n        if (sort) {\n            const opaque = [];\n            const transparent = []; // depthTest true\n            const ui = []; // depthTest false\n\n            renderList.forEach((node) => {\n                // Split into the 3 render groups\n                if (!node.program.transparent) {\n                    opaque.push(node);\n                } else if (node.program.depthTest) {\n                    transparent.push(node);\n                } else {\n                    ui.push(node);\n                }\n\n                node.zDepth = 0;\n\n                // Only calculate z-depth if renderOrder unset and depthTest is true\n                if (node.renderOrder !== 0 || !node.program.depthTest || !camera) return;\n\n                // update z-depth\n                node.worldMatrix.getTranslation(tempVec3);\n                tempVec3.applyMatrix4(camera.projectionViewMatrix);\n                node.zDepth = tempVec3.z;\n            });\n\n            opaque.sort(this.sortOpaque);\n            transparent.sort(this.sortTransparent);\n            ui.sort(this.sortUI);\n\n            renderList = opaque.concat(transparent, ui);\n        }\n\n        return renderList;\n    }\n\n    render({ scene, camera, target = null, update = true, sort = true, frustumCull = true, clear }) {\n        if (target === null) {\n            // make sure no render target bound so draws to canvas\n            this.bindFramebuffer();\n            this.setViewport(this.width * this.dpr, this.height * this.dpr);\n        } else {\n            // bind supplied render target and update viewport\n            this.bindFramebuffer(target);\n            this.setViewport(target.width, target.height);\n        }\n\n        if (clear || (this.autoClear && clear !== false)) {\n            // Ensure depth buffer writing is enabled so it can be cleared\n            if (this.depth && (!target || target.depth)) {\n                this.enable(this.gl.DEPTH_TEST);\n                this.setDepthMask(true);\n            }\n\n            // Same for stencil\n            if(this.stencil || (!target || target.stencil)) {\n                this.enable(this.gl.STENCIL_TEST);\n                this.setStencilMask(0xff)\n            }\n\n            this.gl.clear(\n                (this.color ? this.gl.COLOR_BUFFER_BIT : 0) |\n                    (this.depth ? this.gl.DEPTH_BUFFER_BIT : 0) |\n                    (this.stencil ? this.gl.STENCIL_BUFFER_BIT : 0)\n            );\n        }\n\n        // updates all scene graph matrices\n        if (update) scene.updateMatrixWorld();\n\n        // Update camera separately, in case not in scene graph\n        if (camera) camera.updateMatrixWorld();\n\n        // Get render list - entails culling and sorting\n        const renderList = this.getRenderList({ scene, camera, frustumCull, sort });\n\n        renderList.forEach((node) => {\n            node.draw({ camera });\n        });\n    }\n}\n","import { Transform } from './Transform.js';\nimport { Mat4 } from '../math/Mat4.js';\nimport { Vec3 } from '../math/Vec3.js';\n\nconst tempMat4 = /* @__PURE__ */ new Mat4();\nconst tempVec3a = /* @__PURE__ */ new Vec3();\nconst tempVec3b = /* @__PURE__ */ new Vec3();\n\nexport class Camera extends Transform {\n    constructor(gl, { near = 0.1, far = 100, fov = 45, aspect = 1, left, right, bottom, top, zoom = 1 } = {}) {\n        super();\n\n        Object.assign(this, { near, far, fov, aspect, left, right, bottom, top, zoom });\n\n        this.projectionMatrix = new Mat4();\n        this.viewMatrix = new Mat4();\n        this.projectionViewMatrix = new Mat4();\n        this.worldPosition = new Vec3();\n\n        // Use orthographic if left/right set, else default to perspective camera\n        this.type = left || right ? 'orthographic' : 'perspective';\n\n        if (this.type === 'orthographic') this.orthographic();\n        else this.perspective();\n    }\n\n    perspective({ near = this.near, far = this.far, fov = this.fov, aspect = this.aspect } = {}) {\n        Object.assign(this, { near, far, fov, aspect });\n        this.projectionMatrix.fromPerspective({ fov: fov * (Math.PI / 180), aspect, near, far });\n        this.type = 'perspective';\n        return this;\n    }\n\n    orthographic({\n        near = this.near,\n        far = this.far,\n        left = this.left || -1,\n        right = this.right || 1,\n        bottom = this.bottom || -1,\n        top = this.top || 1,\n        zoom = this.zoom,\n    } = {}) {\n        Object.assign(this, { near, far, left, right, bottom, top, zoom });\n        left /= zoom;\n        right /= zoom;\n        bottom /= zoom;\n        top /= zoom;\n        this.projectionMatrix.fromOrthogonal({ left, right, bottom, top, near, far });\n        this.type = 'orthographic';\n        return this;\n    }\n\n    updateMatrixWorld() {\n        super.updateMatrixWorld();\n        this.viewMatrix.inverse(this.worldMatrix);\n        this.worldMatrix.getTranslation(this.worldPosition);\n\n        // used for sorting\n        this.projectionViewMatrix.multiply(this.projectionMatrix, this.viewMatrix);\n        return this;\n    }\n\n    updateProjectionMatrix() {\n        if (this.type === 'perspective') {\n            return this.perspective();\n        } else {\n            return this.orthographic();\n        }\n    }\n\n    lookAt(target) {\n        super.lookAt(target, true);\n        return this;\n    }\n\n    // Project 3D coordinate to 2D point\n    project(v) {\n        v.applyMatrix4(this.viewMatrix);\n        v.applyMatrix4(this.projectionMatrix);\n        return this;\n    }\n\n    // Unproject 2D point to 3D coordinate\n    unproject(v) {\n        v.applyMatrix4(tempMat4.inverse(this.projectionMatrix));\n        v.applyMatrix4(this.worldMatrix);\n        return this;\n    }\n\n    updateFrustum() {\n        if (!this.frustum) {\n            this.frustum = [new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3(), new Vec3()];\n        }\n\n        const m = this.projectionViewMatrix;\n        this.frustum[0].set(m[3] - m[0], m[7] - m[4], m[11] - m[8]).constant = m[15] - m[12]; // -x\n        this.frustum[1].set(m[3] + m[0], m[7] + m[4], m[11] + m[8]).constant = m[15] + m[12]; // +x\n        this.frustum[2].set(m[3] + m[1], m[7] + m[5], m[11] + m[9]).constant = m[15] + m[13]; // +y\n        this.frustum[3].set(m[3] - m[1], m[7] - m[5], m[11] - m[9]).constant = m[15] - m[13]; // -y\n        this.frustum[4].set(m[3] - m[2], m[7] - m[6], m[11] - m[10]).constant = m[15] - m[14]; // +z (far)\n        this.frustum[5].set(m[3] + m[2], m[7] + m[6], m[11] + m[10]).constant = m[15] + m[14]; // -z (near)\n\n        for (let i = 0; i < 6; i++) {\n            const invLen = 1.0 / this.frustum[i].distance();\n            this.frustum[i].multiply(invLen);\n            this.frustum[i].constant *= invLen;\n        }\n    }\n\n    frustumIntersectsMesh(node, worldMatrix = node.worldMatrix) {\n        // If no position attribute, treat as frustumCulled false\n        if (!node.geometry.attributes.position) return true;\n\n        if (!node.geometry.bounds || node.geometry.bounds.radius === Infinity) node.geometry.computeBoundingSphere();\n\n        if (!node.geometry.bounds) return true;\n\n        const center = tempVec3a;\n        center.copy(node.geometry.bounds.center);\n        center.applyMatrix4(worldMatrix);\n\n        const radius = node.geometry.bounds.radius * worldMatrix.getMaxScaleOnAxis();\n\n        return this.frustumIntersectsSphere(center, radius);\n    }\n\n    frustumIntersectsSphere(center, radius) {\n        const normal = tempVec3b;\n\n        for (let i = 0; i < 6; i++) {\n            const plane = this.frustum[i];\n            const distance = normal.copy(plane).dot(center) + plane.constant;\n            if (distance < -radius) return false;\n        }\n        return true;\n    }\n}\n","import { Vec3 } from '../math/Vec3.js';\nimport { Quat } from '../math/Quat.js';\nimport { Mat4 } from '../math/Mat4.js';\nimport { Euler } from '../math/Euler.js';\n\nexport class Transform {\n    constructor() {\n        this.parent = null;\n        this.children = [];\n        this.visible = true;\n\n        this.matrix = new Mat4();\n        this.worldMatrix = new Mat4();\n        this.matrixAutoUpdate = true;\n        this.worldMatrixNeedsUpdate = false;\n\n        this.position = new Vec3();\n        this.quaternion = new Quat();\n        this.scale = new Vec3(1);\n        this.rotation = new Euler();\n        this.up = new Vec3(0, 1, 0);\n\n        this.rotation._target.onChange = () => this.quaternion.fromEuler(this.rotation, true);\n        this.quaternion._target.onChange = () => this.rotation.fromQuaternion(this.quaternion, undefined, true);\n    }\n\n    setParent(parent, notifyParent = true) {\n        if (this.parent && parent !== this.parent) this.parent.removeChild(this, false);\n        this.parent = parent;\n        if (notifyParent && parent) parent.addChild(this, false);\n    }\n\n    addChild(child, notifyChild = true) {\n        if (!~this.children.indexOf(child)) this.children.push(child);\n        if (notifyChild) child.setParent(this, false);\n    }\n\n    removeChild(child, notifyChild = true) {\n        if (!!~this.children.indexOf(child)) this.children.splice(this.children.indexOf(child), 1);\n        if (notifyChild) child.setParent(null, false);\n    }\n\n    updateMatrixWorld(force) {\n        if (this.matrixAutoUpdate) this.updateMatrix();\n        if (this.worldMatrixNeedsUpdate || force) {\n            if (this.parent === null) this.worldMatrix.copy(this.matrix);\n            else this.worldMatrix.multiply(this.parent.worldMatrix, this.matrix);\n            this.worldMatrixNeedsUpdate = false;\n            force = true;\n        }\n\n        for (let i = 0, l = this.children.length; i < l; i++) {\n            this.children[i].updateMatrixWorld(force);\n        }\n    }\n\n    updateMatrix() {\n        this.matrix.compose(this.quaternion, this.position, this.scale);\n        this.worldMatrixNeedsUpdate = true;\n    }\n\n    traverse(callback) {\n        // Return true in callback to stop traversing children\n        if (callback(this)) return;\n        for (let i = 0, l = this.children.length; i < l; i++) {\n            this.children[i].traverse(callback);\n        }\n    }\n\n    decompose() {\n        this.matrix.decompose(this.quaternion._target, this.position, this.scale);\n        this.rotation.fromQuaternion(this.quaternion);\n    }\n\n    lookAt(target, invert = false) {\n        if (invert) this.matrix.lookAt(this.position, target, this.up);\n        else this.matrix.lookAt(target, this.position, this.up);\n        this.matrix.getRotation(this.quaternion._target);\n        this.rotation.fromQuaternion(this.quaternion);\n    }\n}\n","import * as QuatFunc from './functions/QuatFunc.js';\n\nexport class Quat extends Array {\n    constructor(x = 0, y = 0, z = 0, w = 1) {\n        super(x, y, z, w);\n        this.onChange = () => {};\n\n        // Keep reference to proxy target to avoid triggering onChange internally\n        this._target = this;\n\n        // Return a proxy to trigger onChange when array elements are edited directly\n        const triggerProps = ['0', '1', '2', '3'];\n        return new Proxy(this, {\n            set(target, property) {\n                const success = Reflect.set(...arguments);\n                if (success && triggerProps.includes(property)) target.onChange();\n                return success;\n            },\n        });\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    get z() {\n        return this[2];\n    }\n\n    get w() {\n        return this[3];\n    }\n\n    set x(v) {\n        this._target[0] = v;\n        this.onChange();\n    }\n\n    set y(v) {\n        this._target[1] = v;\n        this.onChange();\n    }\n\n    set z(v) {\n        this._target[2] = v;\n        this.onChange();\n    }\n\n    set w(v) {\n        this._target[3] = v;\n        this.onChange();\n    }\n\n    identity() {\n        QuatFunc.identity(this._target);\n        this.onChange();\n        return this;\n    }\n\n    set(x, y, z, w) {\n        if (x.length) return this.copy(x);\n        QuatFunc.set(this._target, x, y, z, w);\n        this.onChange();\n        return this;\n    }\n\n    rotateX(a) {\n        QuatFunc.rotateX(this._target, this._target, a);\n        this.onChange();\n        return this;\n    }\n\n    rotateY(a) {\n        QuatFunc.rotateY(this._target, this._target, a);\n        this.onChange();\n        return this;\n    }\n\n    rotateZ(a) {\n        QuatFunc.rotateZ(this._target, this._target, a);\n        this.onChange();\n        return this;\n    }\n\n    inverse(q = this._target) {\n        QuatFunc.invert(this._target, q);\n        this.onChange();\n        return this;\n    }\n\n    conjugate(q = this._target) {\n        QuatFunc.conjugate(this._target, q);\n        this.onChange();\n        return this;\n    }\n\n    copy(q) {\n        QuatFunc.copy(this._target, q);\n        this.onChange();\n        return this;\n    }\n\n    normalize(q = this._target) {\n        QuatFunc.normalize(this._target, q);\n        this.onChange();\n        return this;\n    }\n\n    multiply(qA, qB) {\n        if (qB) {\n            QuatFunc.multiply(this._target, qA, qB);\n        } else {\n            QuatFunc.multiply(this._target, this._target, qA);\n        }\n        this.onChange();\n        return this;\n    }\n\n    dot(v) {\n        return QuatFunc.dot(this._target, v);\n    }\n\n    fromMatrix3(matrix3) {\n        QuatFunc.fromMat3(this._target, matrix3);\n        this.onChange();\n        return this;\n    }\n\n    fromEuler(euler, isInternal) {\n        QuatFunc.fromEuler(this._target, euler, euler.order);\n        // Avoid infinite recursion\n        if (!isInternal) this.onChange();\n        return this;\n    }\n\n    fromAxisAngle(axis, a) {\n        QuatFunc.setAxisAngle(this._target, axis, a);\n        this.onChange();\n        return this;\n    }\n\n    slerp(q, t) {\n        QuatFunc.slerp(this._target, this._target, q, t);\n        this.onChange();\n        return this;\n    }\n\n    fromArray(a, o = 0) {\n        this._target[0] = a[o];\n        this._target[1] = a[o + 1];\n        this._target[2] = a[o + 2];\n        this._target[3] = a[o + 3];\n        this.onChange();\n        return this;\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        a[o + 2] = this[2];\n        a[o + 3] = this[3];\n        return a;\n    }\n}\n","import * as vec4 from './Vec4Func.js';\n\n/**\n * Set a quat to the identity quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\nexport function identity(out) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    return out;\n}\n\n/**\n * Sets a quat from the given angle and rotation axis,\n * then returns it.\n *\n * @param {quat} out the receiving quaternion\n * @param {vec3} axis the axis around which to rotate\n * @param {Number} rad the angle in radians\n * @returns {quat} out\n **/\nexport function setAxisAngle(out, axis, rad) {\n    rad = rad * 0.5;\n    let s = Math.sin(rad);\n    out[0] = s * axis[0];\n    out[1] = s * axis[1];\n    out[2] = s * axis[2];\n    out[3] = Math.cos(rad);\n    return out;\n}\n\n/**\n * Multiplies two quats\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n */\nexport function multiply(out, a, b) {\n    let ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    let bx = b[0],\n        by = b[1],\n        bz = b[2],\n        bw = b[3];\n\n    out[0] = ax * bw + aw * bx + ay * bz - az * by;\n    out[1] = ay * bw + aw * by + az * bx - ax * bz;\n    out[2] = az * bw + aw * bz + ax * by - ay * bx;\n    out[3] = aw * bw - ax * bx - ay * by - az * bz;\n    return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the X axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateX(out, a, rad) {\n    rad *= 0.5;\n\n    let ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    let bx = Math.sin(rad),\n        bw = Math.cos(rad);\n\n    out[0] = ax * bw + aw * bx;\n    out[1] = ay * bw + az * bx;\n    out[2] = az * bw - ay * bx;\n    out[3] = aw * bw - ax * bx;\n    return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the Y axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateY(out, a, rad) {\n    rad *= 0.5;\n\n    let ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    let by = Math.sin(rad),\n        bw = Math.cos(rad);\n\n    out[0] = ax * bw - az * by;\n    out[1] = ay * bw + aw * by;\n    out[2] = az * bw + ax * by;\n    out[3] = aw * bw - ay * by;\n    return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the Z axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateZ(out, a, rad) {\n    rad *= 0.5;\n\n    let ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    let bz = Math.sin(rad),\n        bw = Math.cos(rad);\n\n    out[0] = ax * bw + ay * bz;\n    out[1] = ay * bw - ax * bz;\n    out[2] = az * bw + aw * bz;\n    out[3] = aw * bw - az * bz;\n    return out;\n}\n\n/**\n * Performs a spherical linear interpolation between two quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {quat} out\n */\nexport function slerp(out, a, b, t) {\n    // benchmarks:\n    //    http://jsperf.com/quaternion-slerp-implementations\n    let ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    let bx = b[0],\n        by = b[1],\n        bz = b[2],\n        bw = b[3];\n\n    let omega, cosom, sinom, scale0, scale1;\n\n    // calc cosine\n    cosom = ax * bx + ay * by + az * bz + aw * bw;\n    // adjust signs (if necessary)\n    if (cosom < 0.0) {\n        cosom = -cosom;\n        bx = -bx;\n        by = -by;\n        bz = -bz;\n        bw = -bw;\n    }\n    // calculate coefficients\n    if (1.0 - cosom > 0.000001) {\n        // standard case (slerp)\n        omega = Math.acos(cosom);\n        sinom = Math.sin(omega);\n        scale0 = Math.sin((1.0 - t) * omega) / sinom;\n        scale1 = Math.sin(t * omega) / sinom;\n    } else {\n        // \"from\" and \"to\" quaternions are very close\n        //  ... so we can do a linear interpolation\n        scale0 = 1.0 - t;\n        scale1 = t;\n    }\n    // calculate final values\n    out[0] = scale0 * ax + scale1 * bx;\n    out[1] = scale0 * ay + scale1 * by;\n    out[2] = scale0 * az + scale1 * bz;\n    out[3] = scale0 * aw + scale1 * bw;\n\n    return out;\n}\n\n/**\n * Calculates the inverse of a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate inverse of\n * @returns {quat} out\n */\nexport function invert(out, a) {\n    let a0 = a[0],\n        a1 = a[1],\n        a2 = a[2],\n        a3 = a[3];\n    let dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n    let invDot = dot ? 1.0 / dot : 0;\n\n    // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n    out[0] = -a0 * invDot;\n    out[1] = -a1 * invDot;\n    out[2] = -a2 * invDot;\n    out[3] = a3 * invDot;\n    return out;\n}\n\n/**\n * Calculates the conjugate of a quat\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate conjugate of\n * @returns {quat} out\n */\nexport function conjugate(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    out[3] = a[3];\n    return out;\n}\n\n/**\n * Creates a quaternion from the given 3x3 rotation matrix.\n *\n * NOTE: The resultant quaternion is not normalized, so you should be sure\n * to renormalize the quaternion yourself where necessary.\n *\n * @param {quat} out the receiving quaternion\n * @param {mat3} m rotation matrix\n * @returns {quat} out\n * @function\n */\nexport function fromMat3(out, m) {\n    // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n    // article \"Quaternion Calculus and Fast Animation\".\n    let fTrace = m[0] + m[4] + m[8];\n    let fRoot;\n\n    if (fTrace > 0.0) {\n        // |w| > 1/2, may as well choose w > 1/2\n        fRoot = Math.sqrt(fTrace + 1.0); // 2w\n        out[3] = 0.5 * fRoot;\n        fRoot = 0.5 / fRoot; // 1/(4w)\n        out[0] = (m[5] - m[7]) * fRoot;\n        out[1] = (m[6] - m[2]) * fRoot;\n        out[2] = (m[1] - m[3]) * fRoot;\n    } else {\n        // |w| <= 1/2\n        let i = 0;\n        if (m[4] > m[0]) i = 1;\n        if (m[8] > m[i * 3 + i]) i = 2;\n        let j = (i + 1) % 3;\n        let k = (i + 2) % 3;\n\n        fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n        out[i] = 0.5 * fRoot;\n        fRoot = 0.5 / fRoot;\n        out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n        out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n        out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n    }\n\n    return out;\n}\n\n/**\n * Creates a quaternion from the given euler angle x, y, z.\n *\n * @param {quat} out the receiving quaternion\n * @param {vec3} euler Angles to rotate around each axis in degrees.\n * @param {String} order detailing order of operations. Default 'XYZ'.\n * @returns {quat} out\n * @function\n */\nexport function fromEuler(out, euler, order = 'YXZ') {\n    let sx = Math.sin(euler[0] * 0.5);\n    let cx = Math.cos(euler[0] * 0.5);\n    let sy = Math.sin(euler[1] * 0.5);\n    let cy = Math.cos(euler[1] * 0.5);\n    let sz = Math.sin(euler[2] * 0.5);\n    let cz = Math.cos(euler[2] * 0.5);\n\n    if (order === 'XYZ') {\n        out[0] = sx * cy * cz + cx * sy * sz;\n        out[1] = cx * sy * cz - sx * cy * sz;\n        out[2] = cx * cy * sz + sx * sy * cz;\n        out[3] = cx * cy * cz - sx * sy * sz;\n    } else if (order === 'YXZ') {\n        out[0] = sx * cy * cz + cx * sy * sz;\n        out[1] = cx * sy * cz - sx * cy * sz;\n        out[2] = cx * cy * sz - sx * sy * cz;\n        out[3] = cx * cy * cz + sx * sy * sz;\n    } else if (order === 'ZXY') {\n        out[0] = sx * cy * cz - cx * sy * sz;\n        out[1] = cx * sy * cz + sx * cy * sz;\n        out[2] = cx * cy * sz + sx * sy * cz;\n        out[3] = cx * cy * cz - sx * sy * sz;\n    } else if (order === 'ZYX') {\n        out[0] = sx * cy * cz - cx * sy * sz;\n        out[1] = cx * sy * cz + sx * cy * sz;\n        out[2] = cx * cy * sz - sx * sy * cz;\n        out[3] = cx * cy * cz + sx * sy * sz;\n    } else if (order === 'YZX') {\n        out[0] = sx * cy * cz + cx * sy * sz;\n        out[1] = cx * sy * cz + sx * cy * sz;\n        out[2] = cx * cy * sz - sx * sy * cz;\n        out[3] = cx * cy * cz - sx * sy * sz;\n    } else if (order === 'XZY') {\n        out[0] = sx * cy * cz - cx * sy * sz;\n        out[1] = cx * sy * cz - sx * cy * sz;\n        out[2] = cx * cy * sz + sx * sy * cz;\n        out[3] = cx * cy * cz + sx * sy * sz;\n    }\n\n    return out;\n}\n\n/**\n * Copy the values from one quat to another\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the source quaternion\n * @returns {quat} out\n * @function\n */\nexport const copy = vec4.copy;\n\n/**\n * Set the components of a quat to the given values\n *\n * @param {quat} out the receiving quaternion\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} out\n * @function\n */\nexport const set = vec4.set;\n\n/**\n * Adds two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n * @function\n */\nexport const add = vec4.add;\n\n/**\n * Scales a quat by a scalar number\n *\n * @param {quat} out the receiving vector\n * @param {quat} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {quat} out\n * @function\n */\nexport const scale = vec4.scale;\n\n/**\n * Calculates the dot product of two quat's\n *\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\nexport const dot = vec4.dot;\n\n/**\n * Performs a linear interpolation between two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {quat} out\n * @function\n */\nexport const lerp = vec4.lerp;\n\n/**\n * Calculates the length of a quat\n *\n * @param {quat} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport const length = vec4.length;\n\n/**\n * Normalize a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quaternion to normalize\n * @returns {quat} out\n * @function\n */\nexport const normalize = vec4.normalize;\n","const EPSILON = 0.000001;\n\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the source vector\n * @returns {vec4} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    return out;\n}\n\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\nexport function set(out, x, y, z, w) {\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    out[3] = w;\n    return out;\n}\n\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    return out;\n}\n\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\nexport function scale(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    return out;\n}\n\n/**\n * Calculates the length of a vec4\n *\n * @param {vec4} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    let w = a[3];\n    return Math.sqrt(x * x + y * y + z * z + w * w);\n}\n\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to normalize\n * @returns {vec4} out\n */\nexport function normalize(out, a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    let w = a[3];\n    let len = x * x + y * y + z * z + w * w;\n    if (len > 0) {\n        len = 1 / Math.sqrt(len);\n    }\n    out[0] = x * len;\n    out[1] = y * len;\n    out[2] = z * len;\n    out[3] = w * len;\n    return out;\n}\n\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec4} out\n */\nexport function lerp(out, a, b, t) {\n    let ax = a[0];\n    let ay = a[1];\n    let az = a[2];\n    let aw = a[3];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    out[2] = az + t * (b[2] - az);\n    out[3] = aw + t * (b[3] - aw);\n    return out;\n}\n","import * as Mat4Func from './functions/Mat4Func.js';\n\nexport class Mat4 extends Array {\n    constructor(\n        m00 = 1,\n        m01 = 0,\n        m02 = 0,\n        m03 = 0,\n        m10 = 0,\n        m11 = 1,\n        m12 = 0,\n        m13 = 0,\n        m20 = 0,\n        m21 = 0,\n        m22 = 1,\n        m23 = 0,\n        m30 = 0,\n        m31 = 0,\n        m32 = 0,\n        m33 = 1\n    ) {\n        super(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33);\n        return this;\n    }\n\n    get x() {\n        return this[12];\n    }\n\n    get y() {\n        return this[13];\n    }\n\n    get z() {\n        return this[14];\n    }\n\n    get w() {\n        return this[15];\n    }\n\n    set x(v) {\n        this[12] = v;\n    }\n\n    set y(v) {\n        this[13] = v;\n    }\n\n    set z(v) {\n        this[14] = v;\n    }\n\n    set w(v) {\n        this[15] = v;\n    }\n\n    set(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n        if (m00.length) return this.copy(m00);\n        Mat4Func.set(this, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33);\n        return this;\n    }\n\n    translate(v, m = this) {\n        Mat4Func.translate(this, m, v);\n        return this;\n    }\n\n    rotate(v, axis, m = this) {\n        Mat4Func.rotate(this, m, v, axis);\n        return this;\n    }\n\n    scale(v, m = this) {\n        Mat4Func.scale(this, m, typeof v === 'number' ? [v, v, v] : v);\n        return this;\n    }\n\n    add(ma, mb) {\n        if (mb) Mat4Func.add(this, ma, mb);\n        else Mat4Func.add(this, this, ma);\n        return this;\n    }\n\n    sub(ma, mb) {\n        if (mb) Mat4Func.subtract(this, ma, mb);\n        else Mat4Func.subtract(this, this, ma);\n        return this;\n    }\n\n    multiply(ma, mb) {\n        if (!ma.length) {\n            Mat4Func.multiplyScalar(this, this, ma);\n        } else if (mb) {\n            Mat4Func.multiply(this, ma, mb);\n        } else {\n            Mat4Func.multiply(this, this, ma);\n        }\n        return this;\n    }\n\n    identity() {\n        Mat4Func.identity(this);\n        return this;\n    }\n\n    copy(m) {\n        Mat4Func.copy(this, m);\n        return this;\n    }\n\n    fromPerspective({ fov, aspect, near, far } = {}) {\n        Mat4Func.perspective(this, fov, aspect, near, far);\n        return this;\n    }\n\n    fromOrthogonal({ left, right, bottom, top, near, far }) {\n        Mat4Func.ortho(this, left, right, bottom, top, near, far);\n        return this;\n    }\n\n    fromQuaternion(q) {\n        Mat4Func.fromQuat(this, q);\n        return this;\n    }\n\n    setPosition(v) {\n        this.x = v[0];\n        this.y = v[1];\n        this.z = v[2];\n        return this;\n    }\n\n    inverse(m = this) {\n        Mat4Func.invert(this, m);\n        return this;\n    }\n\n    compose(q, pos, scale) {\n        Mat4Func.compose(this, q, pos, scale);\n        return this;\n    }\n\n    decompose(q, pos, scale) {\n        Mat4Func.decompose(this, q, pos, scale);\n        return this;\n    }\n\n    getRotation(q) {\n        Mat4Func.getRotation(q, this);\n        return this;\n    }\n\n    getTranslation(pos) {\n        Mat4Func.getTranslation(pos, this);\n        return this;\n    }\n\n    getScaling(scale) {\n        Mat4Func.getScaling(scale, this);\n        return this;\n    }\n\n    getMaxScaleOnAxis() {\n        return Mat4Func.getMaxScaleOnAxis(this);\n    }\n\n    lookAt(eye, target, up) {\n        Mat4Func.targetTo(this, eye, target, up);\n        return this;\n    }\n\n    determinant() {\n        return Mat4Func.determinant(this);\n    }\n\n    fromArray(a, o = 0) {\n        this[0] = a[o];\n        this[1] = a[o + 1];\n        this[2] = a[o + 2];\n        this[3] = a[o + 3];\n        this[4] = a[o + 4];\n        this[5] = a[o + 5];\n        this[6] = a[o + 6];\n        this[7] = a[o + 7];\n        this[8] = a[o + 8];\n        this[9] = a[o + 9];\n        this[10] = a[o + 10];\n        this[11] = a[o + 11];\n        this[12] = a[o + 12];\n        this[13] = a[o + 13];\n        this[14] = a[o + 14];\n        this[15] = a[o + 15];\n        return this;\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        a[o + 2] = this[2];\n        a[o + 3] = this[3];\n        a[o + 4] = this[4];\n        a[o + 5] = this[5];\n        a[o + 6] = this[6];\n        a[o + 7] = this[7];\n        a[o + 8] = this[8];\n        a[o + 9] = this[9];\n        a[o + 10] = this[10];\n        a[o + 11] = this[11];\n        a[o + 12] = this[12];\n        a[o + 13] = this[13];\n        a[o + 14] = this[14];\n        a[o + 15] = this[15];\n        return a;\n    }\n}\n","import * as vec3 from './Vec3Func.js';\n\nconst EPSILON = 0.000001;\n\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n}\n\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n    out[0] = m00;\n    out[1] = m01;\n    out[2] = m02;\n    out[3] = m03;\n    out[4] = m10;\n    out[5] = m11;\n    out[6] = m12;\n    out[7] = m13;\n    out[8] = m20;\n    out[9] = m21;\n    out[10] = m22;\n    out[11] = m23;\n    out[12] = m30;\n    out[13] = m31;\n    out[14] = m32;\n    out[15] = m33;\n    return out;\n}\n\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nexport function identity(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function transpose(out, a) {\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\n    if (out === a) {\n        let a01 = a[1],\n            a02 = a[2],\n            a03 = a[3];\n        let a12 = a[6],\n            a13 = a[7];\n        let a23 = a[11];\n\n        out[1] = a[4];\n        out[2] = a[8];\n        out[3] = a[12];\n        out[4] = a01;\n        out[6] = a[9];\n        out[7] = a[13];\n        out[8] = a02;\n        out[9] = a12;\n        out[11] = a[14];\n        out[12] = a03;\n        out[13] = a13;\n        out[14] = a23;\n    } else {\n        out[0] = a[0];\n        out[1] = a[4];\n        out[2] = a[8];\n        out[3] = a[12];\n        out[4] = a[1];\n        out[5] = a[5];\n        out[6] = a[9];\n        out[7] = a[13];\n        out[8] = a[2];\n        out[9] = a[6];\n        out[10] = a[10];\n        out[11] = a[14];\n        out[12] = a[3];\n        out[13] = a[7];\n        out[14] = a[11];\n        out[15] = a[15];\n    }\n\n    return out;\n}\n\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function invert(out, a) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    let a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n    let a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n    let a30 = a[12],\n        a31 = a[13],\n        a32 = a[14],\n        a33 = a[15];\n\n    let b00 = a00 * a11 - a01 * a10;\n    let b01 = a00 * a12 - a02 * a10;\n    let b02 = a00 * a13 - a03 * a10;\n    let b03 = a01 * a12 - a02 * a11;\n    let b04 = a01 * a13 - a03 * a11;\n    let b05 = a02 * a13 - a03 * a12;\n    let b06 = a20 * a31 - a21 * a30;\n    let b07 = a20 * a32 - a22 * a30;\n    let b08 = a20 * a33 - a23 * a30;\n    let b09 = a21 * a32 - a22 * a31;\n    let b10 = a21 * a33 - a23 * a31;\n    let b11 = a22 * a33 - a23 * a32;\n\n    // Calculate the determinant\n    let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n    if (!det) {\n        return null;\n    }\n    det = 1.0 / det;\n\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n    out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n    out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n    out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n    out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n    out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n    out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n    out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n    out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n    out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n\n    return out;\n}\n\n/**\n * Calculates the determinant of a mat4\n *\n * @param {mat4} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    let a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n    let a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n    let a30 = a[12],\n        a31 = a[13],\n        a32 = a[14],\n        a33 = a[15];\n\n    let b00 = a00 * a11 - a01 * a10;\n    let b01 = a00 * a12 - a02 * a10;\n    let b02 = a00 * a13 - a03 * a10;\n    let b03 = a01 * a12 - a02 * a11;\n    let b04 = a01 * a13 - a03 * a11;\n    let b05 = a02 * a13 - a03 * a12;\n    let b06 = a20 * a31 - a21 * a30;\n    let b07 = a20 * a32 - a22 * a30;\n    let b08 = a20 * a33 - a23 * a30;\n    let b09 = a21 * a32 - a22 * a31;\n    let b10 = a21 * a33 - a23 * a31;\n    let b11 = a22 * a33 - a23 * a32;\n\n    // Calculate the determinant\n    return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function multiply(out, a, b) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    let a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n    let a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n    let a30 = a[12],\n        a31 = a[13],\n        a32 = a[14],\n        a33 = a[15];\n\n    // Cache only the current line of the second matrix\n    let b0 = b[0],\n        b1 = b[1],\n        b2 = b[2],\n        b3 = b[3];\n    out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n    b0 = b[4];\n    b1 = b[5];\n    b2 = b[6];\n    b3 = b[7];\n    out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n    b0 = b[8];\n    b1 = b[9];\n    b2 = b[10];\n    b3 = b[11];\n    out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n    b0 = b[12];\n    b1 = b[13];\n    b2 = b[14];\n    b3 = b[15];\n    out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n    return out;\n}\n\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to translate\n * @param {vec3} v vector to translate by\n * @returns {mat4} out\n */\nexport function translate(out, a, v) {\n    let x = v[0],\n        y = v[1],\n        z = v[2];\n    let a00, a01, a02, a03;\n    let a10, a11, a12, a13;\n    let a20, a21, a22, a23;\n\n    if (a === out) {\n        out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n        out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n        out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n        out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n    } else {\n        a00 = a[0];\n        a01 = a[1];\n        a02 = a[2];\n        a03 = a[3];\n        a10 = a[4];\n        a11 = a[5];\n        a12 = a[6];\n        a13 = a[7];\n        a20 = a[8];\n        a21 = a[9];\n        a22 = a[10];\n        a23 = a[11];\n\n        out[0] = a00;\n        out[1] = a01;\n        out[2] = a02;\n        out[3] = a03;\n        out[4] = a10;\n        out[5] = a11;\n        out[6] = a12;\n        out[7] = a13;\n        out[8] = a20;\n        out[9] = a21;\n        out[10] = a22;\n        out[11] = a23;\n\n        out[12] = a00 * x + a10 * y + a20 * z + a[12];\n        out[13] = a01 * x + a11 * y + a21 * z + a[13];\n        out[14] = a02 * x + a12 * y + a22 * z + a[14];\n        out[15] = a03 * x + a13 * y + a23 * z + a[15];\n    }\n\n    return out;\n}\n\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {vec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\nexport function scale(out, a, v) {\n    let x = v[0],\n        y = v[1],\n        z = v[2];\n\n    out[0] = a[0] * x;\n    out[1] = a[1] * x;\n    out[2] = a[2] * x;\n    out[3] = a[3] * x;\n    out[4] = a[4] * y;\n    out[5] = a[5] * y;\n    out[6] = a[6] * y;\n    out[7] = a[7] * y;\n    out[8] = a[8] * z;\n    out[9] = a[9] * z;\n    out[10] = a[10] * z;\n    out[11] = a[11] * z;\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n}\n\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {vec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nexport function rotate(out, a, rad, axis) {\n    let x = axis[0],\n        y = axis[1],\n        z = axis[2];\n    let len = Math.hypot(x, y, z);\n    let s, c, t;\n    let a00, a01, a02, a03;\n    let a10, a11, a12, a13;\n    let a20, a21, a22, a23;\n    let b00, b01, b02;\n    let b10, b11, b12;\n    let b20, b21, b22;\n\n    if (Math.abs(len) < EPSILON) {\n        return null;\n    }\n\n    len = 1 / len;\n    x *= len;\n    y *= len;\n    z *= len;\n\n    s = Math.sin(rad);\n    c = Math.cos(rad);\n    t = 1 - c;\n\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n\n    // Construct the elements of the rotation matrix\n    b00 = x * x * t + c;\n    b01 = y * x * t + z * s;\n    b02 = z * x * t - y * s;\n    b10 = x * y * t - z * s;\n    b11 = y * y * t + c;\n    b12 = z * y * t + x * s;\n    b20 = x * z * t + y * s;\n    b21 = y * z * t - x * s;\n    b22 = z * z * t + c;\n\n    // Perform rotation-specific matrix multiplication\n    out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n    out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n    out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n    out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n    out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n    out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n    out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n    out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n    out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n    out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n    out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n    out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n    if (a !== out) {\n        // If the source and destination differ, copy the unchanged last row\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n    return out;\n}\n\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {mat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\nexport function getTranslation(out, mat) {\n    out[0] = mat[12];\n    out[1] = mat[13];\n    out[2] = mat[14];\n\n    return out;\n}\n\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {mat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\nexport function getScaling(out, mat) {\n    let m11 = mat[0];\n    let m12 = mat[1];\n    let m13 = mat[2];\n    let m21 = mat[4];\n    let m22 = mat[5];\n    let m23 = mat[6];\n    let m31 = mat[8];\n    let m32 = mat[9];\n    let m33 = mat[10];\n\n    out[0] = Math.hypot(m11, m12, m13);\n    out[1] = Math.hypot(m21, m22, m23);\n    out[2] = Math.hypot(m31, m32, m33);\n\n    return out;\n}\n\nexport function getMaxScaleOnAxis(mat) {\n    let m11 = mat[0];\n    let m12 = mat[1];\n    let m13 = mat[2];\n    let m21 = mat[4];\n    let m22 = mat[5];\n    let m23 = mat[6];\n    let m31 = mat[8];\n    let m32 = mat[9];\n    let m33 = mat[10];\n\n    const x = m11 * m11 + m12 * m12 + m13 * m13;\n    const y = m21 * m21 + m22 * m22 + m23 * m23;\n    const z = m31 * m31 + m32 * m32 + m33 * m33;\n\n    return Math.sqrt(Math.max(x, y, z));\n}\n\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {mat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\nexport const getRotation = (function () {\n    const temp = [1, 1, 1];\n\n    return function (out, mat) {\n        let scaling = temp;\n        getScaling(scaling, mat);\n\n        let is1 = 1 / scaling[0];\n        let is2 = 1 / scaling[1];\n        let is3 = 1 / scaling[2];\n\n        let sm11 = mat[0] * is1;\n        let sm12 = mat[1] * is2;\n        let sm13 = mat[2] * is3;\n        let sm21 = mat[4] * is1;\n        let sm22 = mat[5] * is2;\n        let sm23 = mat[6] * is3;\n        let sm31 = mat[8] * is1;\n        let sm32 = mat[9] * is2;\n        let sm33 = mat[10] * is3;\n\n        let trace = sm11 + sm22 + sm33;\n        let S = 0;\n\n        if (trace > 0) {\n            S = Math.sqrt(trace + 1.0) * 2;\n            out[3] = 0.25 * S;\n            out[0] = (sm23 - sm32) / S;\n            out[1] = (sm31 - sm13) / S;\n            out[2] = (sm12 - sm21) / S;\n        } else if (sm11 > sm22 && sm11 > sm33) {\n            S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n            out[3] = (sm23 - sm32) / S;\n            out[0] = 0.25 * S;\n            out[1] = (sm12 + sm21) / S;\n            out[2] = (sm31 + sm13) / S;\n        } else if (sm22 > sm33) {\n            S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n            out[3] = (sm31 - sm13) / S;\n            out[0] = (sm12 + sm21) / S;\n            out[1] = 0.25 * S;\n            out[2] = (sm23 + sm32) / S;\n        } else {\n            S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n            out[3] = (sm12 - sm21) / S;\n            out[0] = (sm31 + sm13) / S;\n            out[1] = (sm23 + sm32) / S;\n            out[2] = 0.25 * S;\n        }\n\n        return out;\n    };\n})();\n\n/**\n * From glTF-Transform\n * https://github.com/donmccurdy/glTF-Transform/blob/main/packages/core/src/utils/math-utils.ts\n *\n * Decompose a mat4 to TRS properties.\n *\n * Equivalent to the Matrix4 decompose() method in three.js, and intentionally not using the\n * gl-matrix version. See: https://github.com/toji/gl-matrix/issues/408\n *\n * @param {mat4} srcMat Matrix element, to be decomposed to TRS properties.\n * @param {quat4} dstRotation Rotation element, to be overwritten.\n * @param {vec3} dstTranslation Translation element, to be overwritten.\n * @param {vec3} dstScale Scale element, to be overwritten\n */\nexport function decompose(srcMat, dstRotation, dstTranslation, dstScale) {\n    let sx = vec3.length([srcMat[0], srcMat[1], srcMat[2]]);\n    const sy = vec3.length([srcMat[4], srcMat[5], srcMat[6]]);\n    const sz = vec3.length([srcMat[8], srcMat[9], srcMat[10]]);\n\n    // if determine is negative, we need to invert one scale\n    const det = determinant(srcMat);\n    if (det < 0) sx = -sx;\n\n    dstTranslation[0] = srcMat[12];\n    dstTranslation[1] = srcMat[13];\n    dstTranslation[2] = srcMat[14];\n\n    // scale the rotation part\n    const _m1 = srcMat.slice();\n\n    const invSX = 1 / sx;\n    const invSY = 1 / sy;\n    const invSZ = 1 / sz;\n\n    _m1[0] *= invSX;\n    _m1[1] *= invSX;\n    _m1[2] *= invSX;\n\n    _m1[4] *= invSY;\n    _m1[5] *= invSY;\n    _m1[6] *= invSY;\n\n    _m1[8] *= invSZ;\n    _m1[9] *= invSZ;\n    _m1[10] *= invSZ;\n\n    getRotation(dstRotation, _m1);\n\n    dstScale[0] = sx;\n    dstScale[1] = sy;\n    dstScale[2] = sz;\n}\n\n/**\n * From glTF-Transform\n * https://github.com/donmccurdy/glTF-Transform/blob/main/packages/core/src/utils/math-utils.ts\n *\n * Compose TRS properties to a mat4.\n *\n * Equivalent to the Matrix4 compose() method in three.js, and intentionally not using the\n * gl-matrix version. See: https://github.com/toji/gl-matrix/issues/408\n *\n * @param {mat4} dstMat Matrix element, to be modified and returned.\n * @param {quat4} srcRotation Rotation element of matrix.\n * @param {vec3} srcTranslation Translation element of matrix.\n * @param {vec3} srcScale Scale element of matrix.\n * @returns {mat4} dstMat, overwritten to mat4 equivalent of given TRS properties.\n */\nexport function compose(dstMat, srcRotation, srcTranslation, srcScale) {\n    const te = dstMat;\n\n    const x = srcRotation[0],\n        y = srcRotation[1],\n        z = srcRotation[2],\n        w = srcRotation[3];\n    const x2 = x + x,\n        y2 = y + y,\n        z2 = z + z;\n    const xx = x * x2,\n        xy = x * y2,\n        xz = x * z2;\n    const yy = y * y2,\n        yz = y * z2,\n        zz = z * z2;\n    const wx = w * x2,\n        wy = w * y2,\n        wz = w * z2;\n\n    const sx = srcScale[0],\n        sy = srcScale[1],\n        sz = srcScale[2];\n\n    te[0] = (1 - (yy + zz)) * sx;\n    te[1] = (xy + wz) * sx;\n    te[2] = (xz - wy) * sx;\n    te[3] = 0;\n\n    te[4] = (xy - wz) * sy;\n    te[5] = (1 - (xx + zz)) * sy;\n    te[6] = (yz + wx) * sy;\n    te[7] = 0;\n\n    te[8] = (xz + wy) * sz;\n    te[9] = (yz - wx) * sz;\n    te[10] = (1 - (xx + yy)) * sz;\n    te[11] = 0;\n\n    te[12] = srcTranslation[0];\n    te[13] = srcTranslation[1];\n    te[14] = srcTranslation[2];\n    te[15] = 1;\n\n    return te;\n}\n\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @param {vec3} s Scaling vector\n * @returns {mat4} out\n */\nexport function fromRotationTranslationScale(out, q, v, s) {\n    // Quaternion math\n    let x = q[0],\n        y = q[1],\n        z = q[2],\n        w = q[3];\n    let x2 = x + x;\n    let y2 = y + y;\n    let z2 = z + z;\n\n    let xx = x * x2;\n    let xy = x * y2;\n    let xz = x * z2;\n    let yy = y * y2;\n    let yz = y * z2;\n    let zz = z * z2;\n    let wx = w * x2;\n    let wy = w * y2;\n    let wz = w * z2;\n    let sx = s[0];\n    let sy = s[1];\n    let sz = s[2];\n\n    out[0] = (1 - (yy + zz)) * sx;\n    out[1] = (xy + wz) * sx;\n    out[2] = (xz - wy) * sx;\n    out[3] = 0;\n    out[4] = (xy - wz) * sy;\n    out[5] = (1 - (xx + zz)) * sy;\n    out[6] = (yz + wx) * sy;\n    out[7] = 0;\n    out[8] = (xz + wy) * sz;\n    out[9] = (yz - wx) * sz;\n    out[10] = (1 - (xx + yy)) * sz;\n    out[11] = 0;\n    out[12] = v[0];\n    out[13] = v[1];\n    out[14] = v[2];\n    out[15] = 1;\n\n    return out;\n}\n\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\nexport function fromQuat(out, q) {\n    let x = q[0],\n        y = q[1],\n        z = q[2],\n        w = q[3];\n    let x2 = x + x;\n    let y2 = y + y;\n    let z2 = z + z;\n\n    let xx = x * x2;\n    let yx = y * x2;\n    let yy = y * y2;\n    let zx = z * x2;\n    let zy = z * y2;\n    let zz = z * z2;\n    let wx = w * x2;\n    let wy = w * y2;\n    let wz = w * z2;\n\n    out[0] = 1 - yy - zz;\n    out[1] = yx + wz;\n    out[2] = zx - wy;\n    out[3] = 0;\n\n    out[4] = yx - wz;\n    out[5] = 1 - xx - zz;\n    out[6] = zy + wx;\n    out[7] = 0;\n\n    out[8] = zx + wy;\n    out[9] = zy - wx;\n    out[10] = 1 - xx - yy;\n    out[11] = 0;\n\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n\n    return out;\n}\n\n/**\n * Generates a perspective projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function perspective(out, fovy, aspect, near, far) {\n    let f = 1.0 / Math.tan(fovy / 2);\n    let nf = 1 / (near - far);\n    out[0] = f / aspect;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = f;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = (far + near) * nf;\n    out[11] = -1;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 2 * far * near * nf;\n    out[15] = 0;\n    return out;\n}\n\n/**\n * Generates a orthogonal projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function ortho(out, left, right, bottom, top, near, far) {\n    let lr = 1 / (left - right);\n    let bt = 1 / (bottom - top);\n    let nf = 1 / (near - far);\n    out[0] = -2 * lr;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = -2 * bt;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 2 * nf;\n    out[11] = 0;\n    out[12] = (left + right) * lr;\n    out[13] = (top + bottom) * bt;\n    out[14] = (far + near) * nf;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {vec3} eye Position of the viewer\n * @param {vec3} target Point the viewer is looking at\n * @param {vec3} up vec3 pointing up\n * @returns {mat4} out\n */\nexport function targetTo(out, eye, target, up) {\n    let eyex = eye[0],\n        eyey = eye[1],\n        eyez = eye[2],\n        upx = up[0],\n        upy = up[1],\n        upz = up[2];\n\n    let z0 = eyex - target[0],\n        z1 = eyey - target[1],\n        z2 = eyez - target[2];\n\n    let len = z0 * z0 + z1 * z1 + z2 * z2;\n    if (len === 0) {\n        // eye and target are in the same position\n        z2 = 1;\n    } else {\n        len = 1 / Math.sqrt(len);\n        z0 *= len;\n        z1 *= len;\n        z2 *= len;\n    }\n\n    let x0 = upy * z2 - upz * z1,\n        x1 = upz * z0 - upx * z2,\n        x2 = upx * z1 - upy * z0;\n\n    len = x0 * x0 + x1 * x1 + x2 * x2;\n    if (len === 0) {\n        // up and z are parallel\n        if (upz) {\n            upx += 1e-6;\n        } else if (upy) {\n            upz += 1e-6;\n        } else {\n            upy += 1e-6;\n        }\n        (x0 = upy * z2 - upz * z1), (x1 = upz * z0 - upx * z2), (x2 = upx * z1 - upy * z0);\n\n        len = x0 * x0 + x1 * x1 + x2 * x2;\n    }\n\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n\n    out[0] = x0;\n    out[1] = x1;\n    out[2] = x2;\n    out[3] = 0;\n    out[4] = z1 * x2 - z2 * x1;\n    out[5] = z2 * x0 - z0 * x2;\n    out[6] = z0 * x1 - z1 * x0;\n    out[7] = 0;\n    out[8] = z0;\n    out[9] = z1;\n    out[10] = z2;\n    out[11] = 0;\n    out[12] = eyex;\n    out[13] = eyey;\n    out[14] = eyez;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    out[4] = a[4] + b[4];\n    out[5] = a[5] + b[5];\n    out[6] = a[6] + b[6];\n    out[7] = a[7] + b[7];\n    out[8] = a[8] + b[8];\n    out[9] = a[9] + b[9];\n    out[10] = a[10] + b[10];\n    out[11] = a[11] + b[11];\n    out[12] = a[12] + b[12];\n    out[13] = a[13] + b[13];\n    out[14] = a[14] + b[14];\n    out[15] = a[15] + b[15];\n    return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    out[3] = a[3] - b[3];\n    out[4] = a[4] - b[4];\n    out[5] = a[5] - b[5];\n    out[6] = a[6] - b[6];\n    out[7] = a[7] - b[7];\n    out[8] = a[8] - b[8];\n    out[9] = a[9] - b[9];\n    out[10] = a[10] - b[10];\n    out[11] = a[11] - b[11];\n    out[12] = a[12] - b[12];\n    out[13] = a[13] - b[13];\n    out[14] = a[14] - b[14];\n    out[15] = a[15] - b[15];\n    return out;\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\nexport function multiplyScalar(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    out[4] = a[4] * b;\n    out[5] = a[5] * b;\n    out[6] = a[6] * b;\n    out[7] = a[7] * b;\n    out[8] = a[8] * b;\n    out[9] = a[9] * b;\n    out[10] = a[10] * b;\n    out[11] = a[11] * b;\n    out[12] = a[12] * b;\n    out[13] = a[13] * b;\n    out[14] = a[14] * b;\n    out[15] = a[15] * b;\n    return out;\n}\n","import * as EulerFunc from './functions/EulerFunc.js';\nimport { Mat4 } from './Mat4.js';\n\nconst tmpMat4 = /* @__PURE__ */ new Mat4();\n\nexport class Euler extends Array {\n    constructor(x = 0, y = x, z = x, order = 'YXZ') {\n        super(x, y, z);\n        this.order = order;\n        this.onChange = () => {};\n\n        // Keep reference to proxy target to avoid triggering onChange internally\n        this._target = this;\n\n        // Return a proxy to trigger onChange when array elements are edited directly\n        const triggerProps = ['0', '1', '2'];\n        return new Proxy(this, {\n            set(target, property) {\n                const success = Reflect.set(...arguments);\n                if (success && triggerProps.includes(property)) target.onChange();\n                return success;\n            },\n        });\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    get z() {\n        return this[2];\n    }\n\n    set x(v) {\n        this._target[0] = v;\n        this.onChange();\n    }\n\n    set y(v) {\n        this._target[1] = v;\n        this.onChange();\n    }\n\n    set z(v) {\n        this._target[2] = v;\n        this.onChange();\n    }\n\n    set(x, y = x, z = x) {\n        if (x.length) return this.copy(x);\n        this._target[0] = x;\n        this._target[1] = y;\n        this._target[2] = z;\n        this.onChange();\n        return this;\n    }\n\n    copy(v) {\n        this._target[0] = v[0];\n        this._target[1] = v[1];\n        this._target[2] = v[2];\n        this.onChange();\n        return this;\n    }\n\n    reorder(order) {\n        this._target.order = order;\n        this.onChange();\n        return this;\n    }\n\n    fromRotationMatrix(m, order = this.order) {\n        EulerFunc.fromRotationMatrix(this._target, m, order);\n        this.onChange();\n        return this;\n    }\n\n    fromQuaternion(q, order = this.order, isInternal) {\n        tmpMat4.fromQuaternion(q);\n        this._target.fromRotationMatrix(tmpMat4, order);\n        // Avoid infinite recursion\n        if (!isInternal) this.onChange();\n        return this;\n    }\n\n    fromArray(a, o = 0) {\n        this._target[0] = a[o];\n        this._target[1] = a[o + 1];\n        this._target[2] = a[o + 2];\n        return this;\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        a[o + 2] = this[2];\n        return a;\n    }\n}\n","// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\nexport function fromRotationMatrix(out, m, order = 'YXZ') {\n    if (order === 'XYZ') {\n        out[1] = Math.asin(Math.min(Math.max(m[8], -1), 1));\n        if (Math.abs(m[8]) < 0.99999) {\n            out[0] = Math.atan2(-m[9], m[10]);\n            out[2] = Math.atan2(-m[4], m[0]);\n        } else {\n            out[0] = Math.atan2(m[6], m[5]);\n            out[2] = 0;\n        }\n    } else if (order === 'YXZ') {\n        out[0] = Math.asin(-Math.min(Math.max(m[9], -1), 1));\n        if (Math.abs(m[9]) < 0.99999) {\n            out[1] = Math.atan2(m[8], m[10]);\n            out[2] = Math.atan2(m[1], m[5]);\n        } else {\n            out[1] = Math.atan2(-m[2], m[0]);\n            out[2] = 0;\n        }\n    } else if (order === 'ZXY') {\n        out[0] = Math.asin(Math.min(Math.max(m[6], -1), 1));\n        if (Math.abs(m[6]) < 0.99999) {\n            out[1] = Math.atan2(-m[2], m[10]);\n            out[2] = Math.atan2(-m[4], m[5]);\n        } else {\n            out[1] = 0;\n            out[2] = Math.atan2(m[1], m[0]);\n        }\n    } else if (order === 'ZYX') {\n        out[1] = Math.asin(-Math.min(Math.max(m[2], -1), 1));\n        if (Math.abs(m[2]) < 0.99999) {\n            out[0] = Math.atan2(m[6], m[10]);\n            out[2] = Math.atan2(m[1], m[0]);\n        } else {\n            out[0] = 0;\n            out[2] = Math.atan2(-m[4], m[5]);\n        }\n    } else if (order === 'YZX') {\n        out[2] = Math.asin(Math.min(Math.max(m[1], -1), 1));\n        if (Math.abs(m[1]) < 0.99999) {\n            out[0] = Math.atan2(-m[9], m[5]);\n            out[1] = Math.atan2(-m[2], m[0]);\n        } else {\n            out[0] = 0;\n            out[1] = Math.atan2(m[8], m[10]);\n        }\n    } else if (order === 'XZY') {\n        out[2] = Math.asin(-Math.min(Math.max(m[4], -1), 1));\n        if (Math.abs(m[4]) < 0.99999) {\n            out[0] = Math.atan2(m[6], m[5]);\n            out[1] = Math.atan2(m[8], m[0]);\n        } else {\n            out[0] = Math.atan2(-m[9], m[10]);\n            out[1] = 0;\n        }\n    }\n\n    return out;\n}\n","import { Transform } from './Transform.js';\nimport { Mat3 } from '../math/Mat3.js';\nimport { Mat4 } from '../math/Mat4.js';\n\nlet ID = 0;\n\nexport class Mesh extends Transform {\n    constructor(gl, { geometry, program, mode = gl.TRIANGLES, frustumCulled = true, renderOrder = 0 } = {}) {\n        super();\n        if (!gl.canvas) console.error('gl not passed as first argument to Mesh');\n        this.gl = gl;\n        this.id = ID++;\n        this.geometry = geometry;\n        this.program = program;\n        this.mode = mode;\n\n        // Used to skip frustum culling\n        this.frustumCulled = frustumCulled;\n\n        // Override sorting to force an order\n        this.renderOrder = renderOrder;\n        this.modelViewMatrix = new Mat4();\n        this.normalMatrix = new Mat3();\n        this.beforeRenderCallbacks = [];\n        this.afterRenderCallbacks = [];\n    }\n\n    onBeforeRender(f) {\n        this.beforeRenderCallbacks.push(f);\n        return this;\n    }\n\n    onAfterRender(f) {\n        this.afterRenderCallbacks.push(f);\n        return this;\n    }\n\n    draw({ camera } = {}) {\n        if (camera) {\n            // Add empty matrix uniforms to program if unset\n            if (!this.program.uniforms.modelMatrix) {\n                Object.assign(this.program.uniforms, {\n                    modelMatrix: { value: null },\n                    viewMatrix: { value: null },\n                    modelViewMatrix: { value: null },\n                    normalMatrix: { value: null },\n                    projectionMatrix: { value: null },\n                    cameraPosition: { value: null },\n                });\n            }\n\n            // Set the matrix uniforms\n            this.program.uniforms.projectionMatrix.value = camera.projectionMatrix;\n            this.program.uniforms.cameraPosition.value = camera.worldPosition;\n            this.program.uniforms.viewMatrix.value = camera.viewMatrix;\n            this.modelViewMatrix.multiply(camera.viewMatrix, this.worldMatrix);\n            this.normalMatrix.getNormalMatrix(this.modelViewMatrix);\n            this.program.uniforms.modelMatrix.value = this.worldMatrix;\n            this.program.uniforms.modelViewMatrix.value = this.modelViewMatrix;\n            this.program.uniforms.normalMatrix.value = this.normalMatrix;\n        }\n        this.beforeRenderCallbacks.forEach((f) => f && f({ mesh: this, camera }));\n\n        // determine if faces need to be flipped - when mesh scaled negatively\n        let flipFaces = this.program.cullFace && this.worldMatrix.determinant() < 0;\n        this.program.use({ flipFaces });\n        this.geometry.draw({ mode: this.mode, program: this.program });\n        this.afterRenderCallbacks.forEach((f) => f && f({ mesh: this, camera }));\n    }\n}\n","import * as Mat3Func from './functions/Mat3Func.js';\n\nexport class Mat3 extends Array {\n    constructor(m00 = 1, m01 = 0, m02 = 0, m10 = 0, m11 = 1, m12 = 0, m20 = 0, m21 = 0, m22 = 1) {\n        super(m00, m01, m02, m10, m11, m12, m20, m21, m22);\n        return this;\n    }\n\n    set(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n        if (m00.length) return this.copy(m00);\n        Mat3Func.set(this, m00, m01, m02, m10, m11, m12, m20, m21, m22);\n        return this;\n    }\n\n    translate(v, m = this) {\n        Mat3Func.translate(this, m, v);\n        return this;\n    }\n\n    rotate(v, m = this) {\n        Mat3Func.rotate(this, m, v);\n        return this;\n    }\n\n    scale(v, m = this) {\n        Mat3Func.scale(this, m, v);\n        return this;\n    }\n\n    multiply(ma, mb) {\n        if (mb) {\n            Mat3Func.multiply(this, ma, mb);\n        } else {\n            Mat3Func.multiply(this, this, ma);\n        }\n        return this;\n    }\n\n    identity() {\n        Mat3Func.identity(this);\n        return this;\n    }\n\n    copy(m) {\n        Mat3Func.copy(this, m);\n        return this;\n    }\n\n    fromMatrix4(m) {\n        Mat3Func.fromMat4(this, m);\n        return this;\n    }\n\n    fromQuaternion(q) {\n        Mat3Func.fromQuat(this, q);\n        return this;\n    }\n\n    fromBasis(vec3a, vec3b, vec3c) {\n        this.set(vec3a[0], vec3a[1], vec3a[2], vec3b[0], vec3b[1], vec3b[2], vec3c[0], vec3c[1], vec3c[2]);\n        return this;\n    }\n\n    inverse(m = this) {\n        Mat3Func.invert(this, m);\n        return this;\n    }\n\n    getNormalMatrix(m) {\n        Mat3Func.normalFromMat4(this, m);\n        return this;\n    }\n}\n","const EPSILON = 0.000001;\n\n/**\n * Copies the upper-left 3x3 values into the given mat3.\n *\n * @param {mat3} out the receiving 3x3 matrix\n * @param {mat4} a   the source 4x4 matrix\n * @returns {mat3} out\n */\nexport function fromMat4(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[4];\n    out[4] = a[5];\n    out[5] = a[6];\n    out[6] = a[8];\n    out[7] = a[9];\n    out[8] = a[10];\n    return out;\n}\n\n/**\n * Calculates a 3x3 matrix from the given quaternion\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {quat} q Quaternion to create matrix from\n *\n * @returns {mat3} out\n */\nexport function fromQuat(out, q) {\n    let x = q[0],\n        y = q[1],\n        z = q[2],\n        w = q[3];\n    let x2 = x + x;\n    let y2 = y + y;\n    let z2 = z + z;\n\n    let xx = x * x2;\n    let yx = y * x2;\n    let yy = y * y2;\n    let zx = z * x2;\n    let zy = z * y2;\n    let zz = z * z2;\n    let wx = w * x2;\n    let wy = w * y2;\n    let wz = w * z2;\n\n    out[0] = 1 - yy - zz;\n    out[3] = yx - wz;\n    out[6] = zx + wy;\n\n    out[1] = yx + wz;\n    out[4] = 1 - xx - zz;\n    out[7] = zy - wx;\n\n    out[2] = zx - wy;\n    out[5] = zy + wx;\n    out[8] = 1 - xx - yy;\n\n    return out;\n}\n\n/**\n * Copy the values from one mat3 to another\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    return out;\n}\n\n/**\n * Set the components of a mat3 to the given values\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n    out[0] = m00;\n    out[1] = m01;\n    out[2] = m02;\n    out[3] = m10;\n    out[4] = m11;\n    out[5] = m12;\n    out[6] = m20;\n    out[7] = m21;\n    out[8] = m22;\n    return out;\n}\n\n/**\n * Set a mat3 to the identity matrix\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\nexport function identity(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 1;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 1;\n    return out;\n}\n\n/**\n * Transpose the values of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function transpose(out, a) {\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\n    if (out === a) {\n        let a01 = a[1],\n            a02 = a[2],\n            a12 = a[5];\n        out[1] = a[3];\n        out[2] = a[6];\n        out[3] = a01;\n        out[5] = a[7];\n        out[6] = a02;\n        out[7] = a12;\n    } else {\n        out[0] = a[0];\n        out[1] = a[3];\n        out[2] = a[6];\n        out[3] = a[1];\n        out[4] = a[4];\n        out[5] = a[7];\n        out[6] = a[2];\n        out[7] = a[5];\n        out[8] = a[8];\n    }\n\n    return out;\n}\n\n/**\n * Inverts a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the source matrix\n * @returns {mat3} out\n */\nexport function invert(out, a) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2];\n    let a10 = a[3],\n        a11 = a[4],\n        a12 = a[5];\n    let a20 = a[6],\n        a21 = a[7],\n        a22 = a[8];\n\n    let b01 = a22 * a11 - a12 * a21;\n    let b11 = -a22 * a10 + a12 * a20;\n    let b21 = a21 * a10 - a11 * a20;\n\n    // Calculate the determinant\n    let det = a00 * b01 + a01 * b11 + a02 * b21;\n\n    if (!det) {\n        return null;\n    }\n    det = 1.0 / det;\n\n    out[0] = b01 * det;\n    out[1] = (-a22 * a01 + a02 * a21) * det;\n    out[2] = (a12 * a01 - a02 * a11) * det;\n    out[3] = b11 * det;\n    out[4] = (a22 * a00 - a02 * a20) * det;\n    out[5] = (-a12 * a00 + a02 * a10) * det;\n    out[6] = b21 * det;\n    out[7] = (-a21 * a00 + a01 * a20) * det;\n    out[8] = (a11 * a00 - a01 * a10) * det;\n    return out;\n}\n\n/**\n * Calculates the determinant of a mat3\n *\n * @param {mat3} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2];\n    let a10 = a[3],\n        a11 = a[4],\n        a12 = a[5];\n    let a20 = a[6],\n        a21 = a[7],\n        a22 = a[8];\n\n    return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n\n/**\n * Multiplies two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nexport function multiply(out, a, b) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2];\n    let a10 = a[3],\n        a11 = a[4],\n        a12 = a[5];\n    let a20 = a[6],\n        a21 = a[7],\n        a22 = a[8];\n\n    let b00 = b[0],\n        b01 = b[1],\n        b02 = b[2];\n    let b10 = b[3],\n        b11 = b[4],\n        b12 = b[5];\n    let b20 = b[6],\n        b21 = b[7],\n        b22 = b[8];\n\n    out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n    out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n    out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n\n    out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n    out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n    out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n\n    out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n    out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n    out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n    return out;\n}\n\n/**\n * Translate a mat3 by the given vector\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to translate\n * @param {vec2} v vector to translate by\n * @returns {mat3} out\n */\nexport function translate(out, a, v) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a10 = a[3],\n        a11 = a[4],\n        a12 = a[5],\n        a20 = a[6],\n        a21 = a[7],\n        a22 = a[8],\n        x = v[0],\n        y = v[1];\n\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n\n    out[3] = a10;\n    out[4] = a11;\n    out[5] = a12;\n\n    out[6] = x * a00 + y * a10 + a20;\n    out[7] = x * a01 + y * a11 + a21;\n    out[8] = x * a02 + y * a12 + a22;\n    return out;\n}\n\n/**\n * Rotates a mat3 by the given angle\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\nexport function rotate(out, a, rad) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a10 = a[3],\n        a11 = a[4],\n        a12 = a[5],\n        a20 = a[6],\n        a21 = a[7],\n        a22 = a[8],\n        s = Math.sin(rad),\n        c = Math.cos(rad);\n\n    out[0] = c * a00 + s * a10;\n    out[1] = c * a01 + s * a11;\n    out[2] = c * a02 + s * a12;\n\n    out[3] = c * a10 - s * a00;\n    out[4] = c * a11 - s * a01;\n    out[5] = c * a12 - s * a02;\n\n    out[6] = a20;\n    out[7] = a21;\n    out[8] = a22;\n    return out;\n}\n\n/**\n * Scales the mat3 by the dimensions in the given vec2\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to rotate\n * @param {vec2} v the vec2 to scale the matrix by\n * @returns {mat3} out\n **/\nexport function scale(out, a, v) {\n    let x = v[0],\n        y = v[1];\n\n    out[0] = x * a[0];\n    out[1] = x * a[1];\n    out[2] = x * a[2];\n\n    out[3] = y * a[3];\n    out[4] = y * a[4];\n    out[5] = y * a[5];\n\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    return out;\n}\n\n/**\n * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {mat4} a Mat4 to derive the normal matrix from\n *\n * @returns {mat3} out\n */\nexport function normalFromMat4(out, a) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    let a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n    let a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n    let a30 = a[12],\n        a31 = a[13],\n        a32 = a[14],\n        a33 = a[15];\n\n    let b00 = a00 * a11 - a01 * a10;\n    let b01 = a00 * a12 - a02 * a10;\n    let b02 = a00 * a13 - a03 * a10;\n    let b03 = a01 * a12 - a02 * a11;\n    let b04 = a01 * a13 - a03 * a11;\n    let b05 = a02 * a13 - a03 * a12;\n    let b06 = a20 * a31 - a21 * a30;\n    let b07 = a20 * a32 - a22 * a30;\n    let b08 = a20 * a33 - a23 * a30;\n    let b09 = a21 * a32 - a22 * a31;\n    let b10 = a21 * a33 - a23 * a31;\n    let b11 = a22 * a33 - a23 * a32;\n\n    // Calculate the determinant\n    let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n    if (!det) {\n        return null;\n    }\n    det = 1.0 / det;\n\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n\n    out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n\n    out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n\n    return out;\n}\n\n/**\n * Generates a 2D projection matrix with the given bounds\n *\n * @param {mat3} out mat3 frustum matrix will be written into\n * @param {number} width Width of your gl context\n * @param {number} height Height of gl context\n * @returns {mat3} out\n */\nexport function projection(out, width, height) {\n    out[0] = 2 / width;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = -2 / height;\n    out[5] = 0;\n    out[6] = -1;\n    out[7] = 1;\n    out[8] = 1;\n    return out;\n}\n\n/**\n * Adds two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    out[4] = a[4] + b[4];\n    out[5] = a[5] + b[5];\n    out[6] = a[6] + b[6];\n    out[7] = a[7] + b[7];\n    out[8] = a[8] + b[8];\n    return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the first operand\n * @param {mat3} b the second operand\n * @returns {mat3} out\n */\nexport function subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    out[3] = a[3] - b[3];\n    out[4] = a[4] - b[4];\n    out[5] = a[5] - b[5];\n    out[6] = a[6] - b[6];\n    out[7] = a[7] - b[7];\n    out[8] = a[8] - b[8];\n    return out;\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat3} out the receiving matrix\n * @param {mat3} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat3} out\n */\nexport function multiplyScalar(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    out[4] = a[4] * b;\n    out[5] = a[5] * b;\n    out[6] = a[6] * b;\n    out[7] = a[7] * b;\n    out[8] = a[8] * b;\n    return out;\n}\n","// TODO: delete texture\n// TODO: use texSubImage2D for updates (video or when loaded)\n// TODO: need? encoding = linearEncoding\n// TODO: support non-compressed mipmaps uploads\n\nconst emptyPixel = new Uint8Array(4);\n\nfunction isPowerOf2(value) {\n    return (value & (value - 1)) === 0;\n}\n\nlet ID = 1;\n\nexport class Texture {\n    constructor(\n        gl,\n        {\n            image,\n            target = gl.TEXTURE_2D,\n            type = gl.UNSIGNED_BYTE,\n            format = gl.RGBA,\n            internalFormat = format,\n            wrapS = gl.CLAMP_TO_EDGE,\n            wrapT = gl.CLAMP_TO_EDGE,\n            wrapR = gl.CLAMP_TO_EDGE,\n            generateMipmaps = target === (gl.TEXTURE_2D || gl.TEXTURE_CUBE_MAP),\n            minFilter = generateMipmaps ? gl.NEAREST_MIPMAP_LINEAR : gl.LINEAR,\n            magFilter = gl.LINEAR,\n            premultiplyAlpha = false,\n            unpackAlignment = 4,\n            flipY = target == (gl.TEXTURE_2D || gl.TEXTURE_3D) ? true : false,\n            anisotropy = 0,\n            level = 0,\n            width, // used for RenderTargets or Data Textures\n            height = width,\n            length = 1,\n        } = {}\n    ) {\n        this.gl = gl;\n        this.id = ID++;\n\n        this.image = image;\n        this.target = target;\n        this.type = type;\n        this.format = format;\n        this.internalFormat = internalFormat;\n        this.minFilter = minFilter;\n        this.magFilter = magFilter;\n        this.wrapS = wrapS;\n        this.wrapT = wrapT;\n        this.wrapR = wrapR;\n        this.generateMipmaps = generateMipmaps;\n        this.premultiplyAlpha = premultiplyAlpha;\n        this.unpackAlignment = unpackAlignment;\n        this.flipY = flipY;\n        this.anisotropy = Math.min(anisotropy, this.gl.renderer.parameters.maxAnisotropy);\n        this.level = level;\n        this.width = width;\n        this.height = height;\n        this.length = length;\n        this.texture = this.gl.createTexture();\n\n        this.store = {\n            image: null,\n        };\n\n        // Alias for state store to avoid redundant calls for global state\n        this.glState = this.gl.renderer.state;\n\n        // State store to avoid redundant calls for per-texture state\n        this.state = {};\n        this.state.minFilter = this.gl.NEAREST_MIPMAP_LINEAR;\n        this.state.magFilter = this.gl.LINEAR;\n        this.state.wrapS = this.gl.REPEAT;\n        this.state.wrapT = this.gl.REPEAT;\n        this.state.anisotropy = 0;\n    }\n\n    bind() {\n        // Already bound to active texture unit\n        if (this.glState.textureUnits[this.glState.activeTextureUnit] === this.id) return;\n        this.gl.bindTexture(this.target, this.texture);\n        this.glState.textureUnits[this.glState.activeTextureUnit] = this.id;\n    }\n\n    update(textureUnit = 0) {\n        const needsUpdate = !(this.image === this.store.image && !this.needsUpdate);\n\n        // Make sure that texture is bound to its texture unit\n        if (needsUpdate || this.glState.textureUnits[textureUnit] !== this.id) {\n            // set active texture unit to perform texture functions\n            this.gl.renderer.activeTexture(textureUnit);\n            this.bind();\n        }\n\n        if (!needsUpdate) return;\n        this.needsUpdate = false;\n\n        if (this.flipY !== this.glState.flipY) {\n            this.gl.pixelStorei(this.gl.UNPACK_FLIP_Y_WEBGL, this.flipY);\n            this.glState.flipY = this.flipY;\n        }\n\n        if (this.premultiplyAlpha !== this.glState.premultiplyAlpha) {\n            this.gl.pixelStorei(this.gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, this.premultiplyAlpha);\n            this.glState.premultiplyAlpha = this.premultiplyAlpha;\n        }\n\n        if (this.unpackAlignment !== this.glState.unpackAlignment) {\n            this.gl.pixelStorei(this.gl.UNPACK_ALIGNMENT, this.unpackAlignment);\n            this.glState.unpackAlignment = this.unpackAlignment;\n        }\n\n        if (this.minFilter !== this.state.minFilter) {\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_MIN_FILTER, this.minFilter);\n            this.state.minFilter = this.minFilter;\n        }\n\n        if (this.magFilter !== this.state.magFilter) {\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_MAG_FILTER, this.magFilter);\n            this.state.magFilter = this.magFilter;\n        }\n\n        if (this.wrapS !== this.state.wrapS) {\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_WRAP_S, this.wrapS);\n            this.state.wrapS = this.wrapS;\n        }\n\n        if (this.wrapT !== this.state.wrapT) {\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_WRAP_T, this.wrapT);\n            this.state.wrapT = this.wrapT;\n        }\n\n        if (this.wrapR !== this.state.wrapR) {\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_WRAP_R, this.wrapR);\n            this.state.wrapR = this.wrapR;\n        }\n\n        if (this.anisotropy && this.anisotropy !== this.state.anisotropy) {\n            this.gl.texParameterf(this.target, this.gl.renderer.getExtension('EXT_texture_filter_anisotropic').TEXTURE_MAX_ANISOTROPY_EXT, this.anisotropy);\n            this.state.anisotropy = this.anisotropy;\n        }\n\n        if (this.image) {\n            if (this.image.width) {\n                this.width = this.image.width;\n                this.height = this.image.height;\n            }\n\n            if (this.target === this.gl.TEXTURE_CUBE_MAP) {\n                // For cube maps\n                for (let i = 0; i < 6; i++) {\n                    this.gl.texImage2D(this.gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, this.level, this.internalFormat, this.format, this.type, this.image[i]);\n                }\n            } else if (ArrayBuffer.isView(this.image)) {\n                // Data texture\n                if (this.target === this.gl.TEXTURE_2D) {\n                    this.gl.texImage2D(this.target, this.level, this.internalFormat, this.width, this.height, 0, this.format, this.type, this.image);\n                } else if (this.target === this.gl.TEXTURE_2D_ARRAY || this.target === this.gl.TEXTURE_3D) {\n                    this.gl.texImage3D(this.target, this.level, this.internalFormat, this.width, this.height, this.length, 0, this.format, this.type, this.image);\n                }\n            } else if (this.image.isCompressedTexture) {\n                // Compressed texture\n                for (let level = 0; level < this.image.length; level++) {\n                    this.gl.compressedTexImage2D(this.target, level, this.internalFormat, this.image[level].width, this.image[level].height, 0, this.image[level].data);\n                }\n            } else {\n                // Regular texture\n                if (this.target === this.gl.TEXTURE_2D) {\n                    this.gl.texImage2D(this.target, this.level, this.internalFormat, this.format, this.type, this.image);\n                } else {\n                    this.gl.texImage3D(this.target, this.level, this.internalFormat, this.width, this.height, this.length, 0, this.format, this.type, this.image);\n                }\n            }\n\n            if (this.generateMipmaps) {\n                // For WebGL1, if not a power of 2, turn off mips, set wrapping to clamp to edge and minFilter to linear\n                if (!this.gl.renderer.isWebgl2 && (!isPowerOf2(this.image.width) || !isPowerOf2(this.image.height))) {\n                    this.generateMipmaps = false;\n                    this.wrapS = this.wrapT = this.gl.CLAMP_TO_EDGE;\n                    this.minFilter = this.gl.LINEAR;\n                } else {\n                    this.gl.generateMipmap(this.target);\n                }\n            }\n\n            // Callback for when data is pushed to GPU\n            this.onUpdate && this.onUpdate();\n        } else {\n            if (this.target === this.gl.TEXTURE_CUBE_MAP) {\n                // Upload empty pixel for each side while no image to avoid errors while image or video loading\n                for (let i = 0; i < 6; i++) {\n                    this.gl.texImage2D(this.gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, this.gl.RGBA, 1, 1, 0, this.gl.RGBA, this.gl.UNSIGNED_BYTE, emptyPixel);\n                }\n            } else if (this.width) {\n                // image intentionally left null for RenderTarget\n                if (this.target === this.gl.TEXTURE_2D) {\n                    this.gl.texImage2D(this.target, this.level, this.internalFormat, this.width, this.height, 0, this.format, this.type, null);\n                } else {\n                    this.gl.texImage3D(this.target, this.level, this.internalFormat, this.width, this.height, this.length, 0, this.format, this.type, null);\n                }\n            } else {\n                // Upload empty pixel if no image to avoid errors while image or video loading\n                this.gl.texImage2D(this.target, 0, this.gl.RGBA, 1, 1, 0, this.gl.RGBA, this.gl.UNSIGNED_BYTE, emptyPixel);\n            }\n        }\n        this.store.image = this.image;\n    }\n}\n","import * as ColorFunc from './functions/ColorFunc.js';\n\n// Color stored as an array of RGB decimal values (between 0 > 1)\n// Constructor and set method accept following formats:\n// new Color() - Empty (defaults to black)\n// new Color([0.2, 0.4, 1.0]) - Decimal Array (or another Color instance)\n// new Color(0.7, 0.0, 0.1) - Decimal RGB values\n// new Color('#ff0000') - Hex string\n// new Color('#ccc') - Short-hand Hex string\n// new Color(0x4f27e8) - Number\n// new Color('red') - Color name string (short list in ColorFunc.js)\n\nexport class Color extends Array {\n    constructor(color) {\n        if (Array.isArray(color)) return super(...color);\n        return super(...ColorFunc.parseColor(...arguments));\n    }\n\n    get r() {\n        return this[0];\n    }\n\n    get g() {\n        return this[1];\n    }\n\n    get b() {\n        return this[2];\n    }\n\n    set r(v) {\n        this[0] = v;\n    }\n\n    set g(v) {\n        this[1] = v;\n    }\n\n    set b(v) {\n        this[2] = v;\n    }\n\n    set(color) {\n        if (Array.isArray(color)) return this.copy(color);\n        return this.copy(ColorFunc.parseColor(...arguments));\n    }\n\n    copy(v) {\n        this[0] = v[0];\n        this[1] = v[1];\n        this[2] = v[2];\n        return this;\n    }\n}\n","const NAMES = {\n    black: '#000000',\n    white: '#ffffff',\n    red: '#ff0000',\n    green: '#00ff00',\n    blue: '#0000ff',\n    fuchsia: '#ff00ff',\n    cyan: '#00ffff',\n    yellow: '#ffff00',\n    orange: '#ff8000',\n};\n\nexport function hexToRGB(hex) {\n    if (hex.length === 4) hex = hex[0] + hex[1] + hex[1] + hex[2] + hex[2] + hex[3] + hex[3];\n    const rgb = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    if (!rgb) console.warn(`Unable to convert hex string ${hex} to rgb values`);\n    return [parseInt(rgb[1], 16) / 255, parseInt(rgb[2], 16) / 255, parseInt(rgb[3], 16) / 255];\n}\n\nexport function numberToRGB(num) {\n    num = parseInt(num);\n    return [((num >> 16) & 255) / 255, ((num >> 8) & 255) / 255, (num & 255) / 255];\n}\n\nexport function parseColor(color) {\n    // Empty\n    if (color === undefined) return [0, 0, 0];\n\n    // Decimal\n    if (arguments.length === 3) return arguments;\n\n    // Number\n    if (!isNaN(color)) return numberToRGB(color);\n\n    // Hex\n    if (color[0] === '#') return hexToRGB(color);\n\n    // Names\n    if (NAMES[color.toLowerCase()]) return hexToRGB(NAMES[color.toLowerCase()]);\n\n    console.warn('Color format not recognised');\n    return [0, 0, 0];\n}\n","import * as Vec2Func from './functions/Vec2Func.js';\n\nexport class Vec2 extends Array {\n    constructor(x = 0, y = x) {\n        super(x, y);\n        return this;\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    set x(v) {\n        this[0] = v;\n    }\n\n    set y(v) {\n        this[1] = v;\n    }\n\n    set(x, y = x) {\n        if (x.length) return this.copy(x);\n        Vec2Func.set(this, x, y);\n        return this;\n    }\n\n    copy(v) {\n        Vec2Func.copy(this, v);\n        return this;\n    }\n\n    add(va, vb) {\n        if (vb) Vec2Func.add(this, va, vb);\n        else Vec2Func.add(this, this, va);\n        return this;\n    }\n\n    sub(va, vb) {\n        if (vb) Vec2Func.subtract(this, va, vb);\n        else Vec2Func.subtract(this, this, va);\n        return this;\n    }\n\n    multiply(v) {\n        if (v.length) Vec2Func.multiply(this, this, v);\n        else Vec2Func.scale(this, this, v);\n        return this;\n    }\n\n    divide(v) {\n        if (v.length) Vec2Func.divide(this, this, v);\n        else Vec2Func.scale(this, this, 1 / v);\n        return this;\n    }\n\n    inverse(v = this) {\n        Vec2Func.inverse(this, v);\n        return this;\n    }\n\n    // Can't use 'length' as Array.prototype uses it\n    len() {\n        return Vec2Func.length(this);\n    }\n\n    distance(v) {\n        if (v) return Vec2Func.distance(this, v);\n        else return Vec2Func.length(this);\n    }\n\n    squaredLen() {\n        return this.squaredDistance();\n    }\n\n    squaredDistance(v) {\n        if (v) return Vec2Func.squaredDistance(this, v);\n        else return Vec2Func.squaredLength(this);\n    }\n\n    negate(v = this) {\n        Vec2Func.negate(this, v);\n        return this;\n    }\n\n    cross(va, vb) {\n        if (vb) return Vec2Func.cross(va, vb);\n        return Vec2Func.cross(this, va);\n    }\n\n    scale(v) {\n        Vec2Func.scale(this, this, v);\n        return this;\n    }\n\n    normalize() {\n        Vec2Func.normalize(this, this);\n        return this;\n    }\n\n    dot(v) {\n        return Vec2Func.dot(this, v);\n    }\n\n    equals(v) {\n        return Vec2Func.exactEquals(this, v);\n    }\n\n    applyMatrix3(mat3) {\n        Vec2Func.transformMat3(this, this, mat3);\n        return this;\n    }\n\n    applyMatrix4(mat4) {\n        Vec2Func.transformMat4(this, this, mat4);\n        return this;\n    }\n\n    lerp(v, a) {\n        Vec2Func.lerp(this, this, v, a);\n        return this;\n    }\n\n    smoothLerp(v, decay, dt) {\n        Vec2Func.smoothLerp(this, this, v, decay, dt);\n        return this;\n    }\n\n    clone() {\n        return new Vec2(this[0], this[1]);\n    }\n\n    fromArray(a, o = 0) {\n        this[0] = a[o];\n        this[1] = a[o + 1];\n        return this;\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        return a;\n    }\n}\n","const EPSILON = 0.000001;\n\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the source vector\n * @returns {vec2} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    return out;\n}\n\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\nexport function set(out, x, y) {\n    out[0] = x;\n    out[1] = y;\n    return out;\n}\n\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    return out;\n}\n\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function multiply(out, a, b) {\n    out[0] = a[0] * b[0];\n    out[1] = a[1] * b[1];\n    return out;\n}\n\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function divide(out, a, b) {\n    out[0] = a[0] / b[0];\n    out[1] = a[1] / b[1];\n    return out;\n}\n\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\nexport function scale(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1];\n    return Math.sqrt(x * x + y * y);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1];\n    return x * x + y * y;\n}\n\n/**\n * Calculates the length of a vec2\n *\n * @param {vec2} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n    var x = a[0],\n        y = a[1];\n    return Math.sqrt(x * x + y * y);\n}\n\n/**\n * Calculates the squared length of a vec2\n *\n * @param {vec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength(a) {\n    var x = a[0],\n        y = a[1];\n    return x * x + y * y;\n}\n\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to negate\n * @returns {vec2} out\n */\nexport function negate(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    return out;\n}\n\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to invert\n * @returns {vec2} out\n */\nexport function inverse(out, a) {\n    out[0] = 1.0 / a[0];\n    out[1] = 1.0 / a[1];\n    return out;\n}\n\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to normalize\n * @returns {vec2} out\n */\nexport function normalize(out, a) {\n    var x = a[0],\n        y = a[1];\n    var len = x * x + y * y;\n    if (len > 0) {\n        //TODO: evaluate use of glm_invsqrt here?\n        len = 1 / Math.sqrt(len);\n    }\n    out[0] = a[0] * len;\n    out[1] = a[1] * len;\n    return out;\n}\n\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n}\n\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product returns a scalar\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} cross product of a and b\n */\nexport function cross(a, b) {\n    return a[0] * b[1] - a[1] * b[0];\n}\n\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec2} out\n */\nexport function lerp(out, a, b, t) {\n    var ax = a[0],\n        ay = a[1];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    return out;\n}\n\n/**\n * Performs a frame rate independant, linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @param {Number} decay decay constant for interpolation. useful range between 1 and 25, from slow to fast.\n * @param {Number} dt delta time\n * @returns {vec2} out\n */\nexport function smoothLerp(out, a, b, decay, dt) {\n    const exp = Math.exp(-decay * dt);\n    let ax = a[0];\n    let ay = a[1];\n\n    out[0] = b[0] + (ax - b[0]) * exp;\n    out[1] = b[1] + (ay - b[1]) * exp;\n    return out;\n}\n\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat2(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[2] * y;\n    out[1] = m[1] * x + m[3] * y;\n    return out;\n}\n\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2d} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat2d(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[2] * y + m[4];\n    out[1] = m[1] * x + m[3] * y + m[5];\n    return out;\n}\n\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat3} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat3(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[3] * y + m[6];\n    out[1] = m[1] * x + m[4] * y + m[7];\n    return out;\n}\n\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat4(out, a, m) {\n    let x = a[0];\n    let y = a[1];\n    out[0] = m[0] * x + m[4] * y + m[12];\n    out[1] = m[1] * x + m[5] * y + m[13];\n    return out;\n}\n\n/**\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n *\n * @param {vec2} a The first vector.\n * @param {vec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n    return a[0] === b[0] && a[1] === b[1];\n}\n","import { Geometry } from '../core/Geometry.js';\n\nexport class Plane extends Geometry {\n    constructor(gl, { width = 1, height = 1, widthSegments = 1, heightSegments = 1, attributes = {} } = {}) {\n        const wSegs = widthSegments;\n        const hSegs = heightSegments;\n\n        // Determine length of arrays\n        const num = (wSegs + 1) * (hSegs + 1);\n        const numIndices = wSegs * hSegs * 6;\n\n        // Generate empty arrays once\n        const position = new Float32Array(num * 3);\n        const normal = new Float32Array(num * 3);\n        const uv = new Float32Array(num * 2);\n        const index = numIndices > 65536 ? new Uint32Array(numIndices) : new Uint16Array(numIndices);\n\n        Plane.buildPlane(position, normal, uv, index, width, height, 0, wSegs, hSegs);\n\n        Object.assign(attributes, {\n            position: { size: 3, data: position },\n            normal: { size: 3, data: normal },\n            uv: { size: 2, data: uv },\n            index: { data: index },\n        });\n\n        super(gl, attributes);\n    }\n\n    static buildPlane(position, normal, uv, index, width, height, depth, wSegs, hSegs, u = 0, v = 1, w = 2, uDir = 1, vDir = -1, i = 0, ii = 0) {\n        const io = i;\n        const segW = width / wSegs;\n        const segH = height / hSegs;\n\n        for (let iy = 0; iy <= hSegs; iy++) {\n            let y = iy * segH - height / 2;\n            for (let ix = 0; ix <= wSegs; ix++, i++) {\n                let x = ix * segW - width / 2;\n\n                position[i * 3 + u] = x * uDir;\n                position[i * 3 + v] = y * vDir;\n                position[i * 3 + w] = depth / 2;\n\n                normal[i * 3 + u] = 0;\n                normal[i * 3 + v] = 0;\n                normal[i * 3 + w] = depth >= 0 ? 1 : -1;\n\n                uv[i * 2] = ix / wSegs;\n                uv[i * 2 + 1] = 1 - iy / hSegs;\n\n                if (iy === hSegs || ix === wSegs) continue;\n                let a = io + ix + iy * (wSegs + 1);\n                let b = io + ix + (iy + 1) * (wSegs + 1);\n                let c = io + ix + (iy + 1) * (wSegs + 1) + 1;\n                let d = io + ix + iy * (wSegs + 1) + 1;\n\n                index[ii * 6] = a;\n                index[ii * 6 + 1] = b;\n                index[ii * 6 + 2] = d;\n                index[ii * 6 + 3] = b;\n                index[ii * 6 + 4] = c;\n                index[ii * 6 + 5] = d;\n                ii++;\n            }\n        }\n    }\n}\n","// Based from ThreeJS' OrbitControls class, rewritten using es6 with some additions and subtractions.\n// TODO: abstract event handlers so can be fed from other sources\n// TODO: make scroll zoom more accurate than just >/< zero\n// TODO: be able to pass in new camera position\n\nimport { Vec3 } from '../math/Vec3.js';\nimport { Vec2 } from '../math/Vec2.js';\n\nconst STATE = { NONE: -1, ROTATE: 0, DOLLY: 1, PAN: 2, DOLLY_PAN: 3 };\nconst tempVec3 = /* @__PURE__ */ new Vec3();\nconst tempVec2a = /* @__PURE__ */ new Vec2();\nconst tempVec2b = /* @__PURE__ */ new Vec2();\n\nexport function Orbit(\n    object,\n    {\n        element = document,\n        enabled = true,\n        target = new Vec3(),\n        ease = 0.25,\n        inertia = 0.85,\n        enableRotate = true,\n        rotateSpeed = 0.1,\n        autoRotate = false,\n        autoRotateSpeed = 1.0,\n        enableZoom = true,\n        zoomSpeed = 1,\n        zoomStyle = 'dolly',\n        enablePan = true,\n        panSpeed = 0.1,\n        minPolarAngle = 0,\n        maxPolarAngle = Math.PI,\n        minAzimuthAngle = -Infinity,\n        maxAzimuthAngle = Infinity,\n        minDistance = 0,\n        maxDistance = Infinity,\n    } = {}\n) {\n    this.enabled = enabled;\n    this.target = target;\n    this.zoomStyle = zoomStyle;\n\n    // Catch attempts to disable - set to 1 so has no effect\n    ease = ease || 1;\n    inertia = inertia || 0;\n\n    this.minDistance = minDistance;\n    this.maxDistance = maxDistance;\n\n    // current position in sphericalTarget coordinates\n    const sphericalDelta = { radius: 1, phi: 0, theta: 0 };\n    const sphericalTarget = { radius: 1, phi: 0, theta: 0 };\n    const spherical = { radius: 1, phi: 0, theta: 0 };\n    const panDelta = new Vec3();\n\n    // Grab initial position values\n    const offset = new Vec3();\n    offset.copy(object.position).sub(this.target);\n    spherical.radius = sphericalTarget.radius = offset.distance();\n    spherical.theta = sphericalTarget.theta = Math.atan2(offset.x, offset.z);\n    spherical.phi = sphericalTarget.phi = Math.acos(Math.min(Math.max(offset.y / sphericalTarget.radius, -1), 1));\n\n    this.offset = offset;\n\n    this.update = () => {\n        if (autoRotate) {\n            handleAutoRotate();\n        }\n\n        // apply delta\n        sphericalTarget.radius *= sphericalDelta.radius;\n        sphericalTarget.theta += sphericalDelta.theta;\n        sphericalTarget.phi += sphericalDelta.phi;\n\n        // apply boundaries\n        sphericalTarget.theta = Math.max(minAzimuthAngle, Math.min(maxAzimuthAngle, sphericalTarget.theta));\n        sphericalTarget.phi = Math.max(minPolarAngle, Math.min(maxPolarAngle, sphericalTarget.phi));\n        sphericalTarget.radius = Math.max(this.minDistance, Math.min(this.maxDistance, sphericalTarget.radius));\n\n        // ease values\n        spherical.phi += (sphericalTarget.phi - spherical.phi) * ease;\n        spherical.theta += (sphericalTarget.theta - spherical.theta) * ease;\n        spherical.radius += (sphericalTarget.radius - spherical.radius) * ease;\n\n        // apply pan to target. As offset is relative to target, it also shifts\n        this.target.add(panDelta);\n\n        // apply rotation to offset\n        let sinPhiRadius = spherical.radius * Math.sin(Math.max(0.000001, spherical.phi));\n        offset.x = sinPhiRadius * Math.sin(spherical.theta);\n        offset.y = spherical.radius * Math.cos(spherical.phi);\n        offset.z = sinPhiRadius * Math.cos(spherical.theta);\n\n        // Apply updated values to object\n        object.position.copy(this.target).add(offset);\n        object.lookAt(this.target);\n\n        // Apply inertia to values\n        sphericalDelta.theta *= inertia;\n        sphericalDelta.phi *= inertia;\n        panDelta.multiply(inertia);\n\n        // Reset scale every frame to avoid applying scale multiple times\n        sphericalDelta.radius = 1;\n    };\n\n    // Updates internals with new position\n    this.forcePosition = () => {\n        offset.copy(object.position).sub(this.target);\n        spherical.radius = sphericalTarget.radius = offset.distance();\n        spherical.theta = sphericalTarget.theta = Math.atan2(offset.x, offset.z);\n        spherical.phi = sphericalTarget.phi = Math.acos(Math.min(Math.max(offset.y / sphericalTarget.radius, -1), 1));\n        object.lookAt(this.target);\n    };\n\n    // Everything below here just updates panDelta and sphericalDelta\n    // Using those two objects' values, the orbit is calculated\n\n    const rotateStart = new Vec2();\n    const panStart = new Vec2();\n    const dollyStart = new Vec2();\n\n    let state = STATE.NONE;\n    this.mouseButtons = { ORBIT: 0, ZOOM: 1, PAN: 2 };\n\n    function getZoomScale() {\n        return Math.pow(0.95, zoomSpeed);\n    }\n\n    function panLeft(distance, m) {\n        tempVec3.set(m[0], m[1], m[2]);\n        tempVec3.multiply(-distance);\n        panDelta.add(tempVec3);\n    }\n\n    function panUp(distance, m) {\n        tempVec3.set(m[4], m[5], m[6]);\n        tempVec3.multiply(distance);\n        panDelta.add(tempVec3);\n    }\n\n    const pan = (deltaX, deltaY) => {\n        let el = element === document ? document.body : element;\n        tempVec3.copy(object.position).sub(this.target);\n        let targetDistance = tempVec3.distance();\n        targetDistance *= Math.tan((((object.fov || 45) / 2) * Math.PI) / 180.0);\n        panLeft((2 * deltaX * targetDistance) / el.clientHeight, object.matrix);\n        panUp((2 * deltaY * targetDistance) / el.clientHeight, object.matrix);\n    };\n\n    const dolly = (dollyScale) => {\n        if (this.zoomStyle === 'dolly') sphericalDelta.radius /= dollyScale;\n        else {\n            object.fov /= dollyScale;\n            if (object.type === 'orthographic') object.orthographic();\n            else object.perspective();\n        }\n    };\n\n    function handleAutoRotate() {\n        const angle = ((2 * Math.PI) / 60 / 60) * autoRotateSpeed;\n        sphericalDelta.theta -= angle;\n    }\n\n    function handleMoveRotate(x, y) {\n        tempVec2a.set(x, y);\n        tempVec2b.sub(tempVec2a, rotateStart).multiply(rotateSpeed);\n        let el = element === document ? document.body : element;\n        sphericalDelta.theta -= (2 * Math.PI * tempVec2b.x) / el.clientHeight;\n        sphericalDelta.phi -= (2 * Math.PI * tempVec2b.y) / el.clientHeight;\n        rotateStart.copy(tempVec2a);\n    }\n\n    function handleMouseMoveDolly(e) {\n        tempVec2a.set(e.clientX, e.clientY);\n        tempVec2b.sub(tempVec2a, dollyStart);\n        if (tempVec2b.y > 0) {\n            dolly(getZoomScale());\n        } else if (tempVec2b.y < 0) {\n            dolly(1 / getZoomScale());\n        }\n        dollyStart.copy(tempVec2a);\n    }\n\n    function handleMovePan(x, y) {\n        tempVec2a.set(x, y);\n        tempVec2b.sub(tempVec2a, panStart).multiply(panSpeed);\n        pan(tempVec2b.x, tempVec2b.y);\n        panStart.copy(tempVec2a);\n    }\n\n    function handleTouchStartDollyPan(e) {\n        if (enableZoom) {\n            let dx = e.touches[0].pageX - e.touches[1].pageX;\n            let dy = e.touches[0].pageY - e.touches[1].pageY;\n            let distance = Math.sqrt(dx * dx + dy * dy);\n            dollyStart.set(0, distance);\n        }\n\n        if (enablePan) {\n            let x = 0.5 * (e.touches[0].pageX + e.touches[1].pageX);\n            let y = 0.5 * (e.touches[0].pageY + e.touches[1].pageY);\n            panStart.set(x, y);\n        }\n    }\n\n    function handleTouchMoveDollyPan(e) {\n        if (enableZoom) {\n            let dx = e.touches[0].pageX - e.touches[1].pageX;\n            let dy = e.touches[0].pageY - e.touches[1].pageY;\n            let distance = Math.sqrt(dx * dx + dy * dy);\n            tempVec2a.set(0, distance);\n            tempVec2b.set(0, Math.pow(tempVec2a.y / dollyStart.y, zoomSpeed));\n            dolly(tempVec2b.y);\n            dollyStart.copy(tempVec2a);\n        }\n\n        if (enablePan) {\n            let x = 0.5 * (e.touches[0].pageX + e.touches[1].pageX);\n            let y = 0.5 * (e.touches[0].pageY + e.touches[1].pageY);\n            handleMovePan(x, y);\n        }\n    }\n\n    const onMouseDown = (e) => {\n        if (!this.enabled) return;\n\n        switch (e.button) {\n            case this.mouseButtons.ORBIT:\n                if (enableRotate === false) return;\n                rotateStart.set(e.clientX, e.clientY);\n                state = STATE.ROTATE;\n                break;\n            case this.mouseButtons.ZOOM:\n                if (enableZoom === false) return;\n                dollyStart.set(e.clientX, e.clientY);\n                state = STATE.DOLLY;\n                break;\n            case this.mouseButtons.PAN:\n                if (enablePan === false) return;\n                panStart.set(e.clientX, e.clientY);\n                state = STATE.PAN;\n                break;\n        }\n\n        if (state !== STATE.NONE) {\n            window.addEventListener('mousemove', onMouseMove, false);\n            window.addEventListener('mouseup', onMouseUp, false);\n        }\n    };\n\n    const onMouseMove = (e) => {\n        if (!this.enabled) return;\n\n        switch (state) {\n            case STATE.ROTATE:\n                if (enableRotate === false) return;\n                handleMoveRotate(e.clientX, e.clientY);\n                break;\n            case STATE.DOLLY:\n                if (enableZoom === false) return;\n                handleMouseMoveDolly(e);\n                break;\n            case STATE.PAN:\n                if (enablePan === false) return;\n                handleMovePan(e.clientX, e.clientY);\n                break;\n        }\n    };\n\n    const onMouseUp = () => {\n        window.removeEventListener('mousemove', onMouseMove, false);\n        window.removeEventListener('mouseup', onMouseUp, false);\n        state = STATE.NONE;\n    };\n\n    const onMouseWheel = (e) => {\n        if (!this.enabled || !enableZoom || (state !== STATE.NONE && state !== STATE.ROTATE)) return;\n        e.stopPropagation();\n        e.preventDefault();\n\n        if (e.deltaY < 0) {\n            dolly(1 / getZoomScale());\n        } else if (e.deltaY > 0) {\n            dolly(getZoomScale());\n        }\n    };\n\n    const onTouchStart = (e) => {\n        if (!this.enabled) return;\n        e.preventDefault();\n\n        switch (e.touches.length) {\n            case 1:\n                if (enableRotate === false) return;\n                rotateStart.set(e.touches[0].pageX, e.touches[0].pageY);\n                state = STATE.ROTATE;\n                break;\n            case 2:\n                if (enableZoom === false && enablePan === false) return;\n                handleTouchStartDollyPan(e);\n                state = STATE.DOLLY_PAN;\n                break;\n            default:\n                state = STATE.NONE;\n        }\n    };\n\n    const onTouchMove = (e) => {\n        if (!this.enabled) return;\n        e.preventDefault();\n        e.stopPropagation();\n\n        switch (e.touches.length) {\n            case 1:\n                if (enableRotate === false) return;\n                handleMoveRotate(e.touches[0].pageX, e.touches[0].pageY);\n                break;\n            case 2:\n                if (enableZoom === false && enablePan === false) return;\n                handleTouchMoveDollyPan(e);\n                break;\n            default:\n                state = STATE.NONE;\n        }\n    };\n\n    const onTouchEnd = () => {\n        if (!this.enabled) return;\n        state = STATE.NONE;\n    };\n\n    const onContextMenu = (e) => {\n        if (!this.enabled) return;\n        e.preventDefault();\n    };\n\n    function addHandlers() {\n        element.addEventListener('contextmenu', onContextMenu, false);\n        element.addEventListener('mousedown', onMouseDown, false);\n        element.addEventListener('wheel', onMouseWheel, { passive: false });\n        element.addEventListener('touchstart', onTouchStart, { passive: false });\n        element.addEventListener('touchend', onTouchEnd, false);\n        element.addEventListener('touchmove', onTouchMove, { passive: false });\n    }\n\n    this.remove = function () {\n        element.removeEventListener('contextmenu', onContextMenu);\n        element.removeEventListener('mousedown', onMouseDown);\n        element.removeEventListener('wheel', onMouseWheel);\n        element.removeEventListener('touchstart', onTouchStart);\n        element.removeEventListener('touchend', onTouchEnd);\n        element.removeEventListener('touchmove', onTouchMove);\n        window.removeEventListener('mousemove', onMouseMove);\n        window.removeEventListener('mouseup', onMouseUp);\n    };\n\n    addHandlers();\n}\n","import { Geometry } from '../core/Geometry.js';\nimport { Program } from '../core/Program.js';\nimport { Mesh } from '../core/Mesh.js';\nimport { Vec2 } from '../math/Vec2.js';\nimport { Vec3 } from '../math/Vec3.js';\nimport { Color } from '../math/Color.js';\n\nconst tmp = /* @__PURE__ */ new Vec3();\n\nexport class Polyline {\n    constructor(\n        gl,\n        {\n            points, // Array of Vec3s\n            vertex = defaultVertex,\n            fragment = defaultFragment,\n            uniforms = {},\n            attributes = {}, // For passing in custom attribs\n        }\n    ) {\n        this.gl = gl;\n        this.points = points;\n        this.count = points.length;\n\n        // Create buffers\n        this.position = new Float32Array(this.count * 3 * 2);\n        this.prev = new Float32Array(this.count * 3 * 2);\n        this.next = new Float32Array(this.count * 3 * 2);\n        const side = new Float32Array(this.count * 1 * 2);\n        const uv = new Float32Array(this.count * 2 * 2);\n        const index = new Uint16Array((this.count - 1) * 3 * 2);\n\n        // Set static buffers\n        for (let i = 0; i < this.count; i++) {\n            side.set([-1, 1], i * 2);\n            const v = i / (this.count - 1);\n            uv.set([0, v, 1, v], i * 4);\n\n            if (i === this.count - 1) continue;\n            const ind = i * 2;\n            index.set([ind + 0, ind + 1, ind + 2], (ind + 0) * 3);\n            index.set([ind + 2, ind + 1, ind + 3], (ind + 1) * 3);\n        }\n\n        const geometry = (this.geometry = new Geometry(\n            gl,\n            Object.assign(attributes, {\n                position: { size: 3, data: this.position },\n                prev: { size: 3, data: this.prev },\n                next: { size: 3, data: this.next },\n                side: { size: 1, data: side },\n                uv: { size: 2, data: uv },\n                index: { size: 1, data: index },\n            })\n        ));\n\n        // Populate dynamic buffers\n        this.updateGeometry();\n\n        if (!uniforms.uResolution) this.resolution = uniforms.uResolution = { value: new Vec2() };\n        if (!uniforms.uDPR) this.dpr = uniforms.uDPR = { value: 1 };\n        if (!uniforms.uThickness) this.thickness = uniforms.uThickness = { value: 1 };\n        if (!uniforms.uColor) this.color = uniforms.uColor = { value: new Color('#000') };\n        if (!uniforms.uMiter) this.miter = uniforms.uMiter = { value: 1 };\n\n        // Set size uniforms' values\n        this.resize();\n\n        const program = (this.program = new Program(gl, {\n            vertex,\n            fragment,\n            uniforms,\n        }));\n\n        this.mesh = new Mesh(gl, { geometry, program });\n    }\n\n    updateGeometry() {\n        this.points.forEach((p, i) => {\n            p.toArray(this.position, i * 3 * 2);\n            p.toArray(this.position, i * 3 * 2 + 3);\n\n            if (!i) {\n                // If first point, calculate prev using the distance to 2nd point\n                tmp.copy(p)\n                    .sub(this.points[i + 1])\n                    .add(p);\n                tmp.toArray(this.prev, i * 3 * 2);\n                tmp.toArray(this.prev, i * 3 * 2 + 3);\n            } else {\n                p.toArray(this.next, (i - 1) * 3 * 2);\n                p.toArray(this.next, (i - 1) * 3 * 2 + 3);\n            }\n\n            if (i === this.points.length - 1) {\n                // If last point, calculate next using distance to 2nd last point\n                tmp.copy(p)\n                    .sub(this.points[i - 1])\n                    .add(p);\n                tmp.toArray(this.next, i * 3 * 2);\n                tmp.toArray(this.next, i * 3 * 2 + 3);\n            } else {\n                p.toArray(this.prev, (i + 1) * 3 * 2);\n                p.toArray(this.prev, (i + 1) * 3 * 2 + 3);\n            }\n        });\n\n        this.geometry.attributes.position.needsUpdate = true;\n        this.geometry.attributes.prev.needsUpdate = true;\n        this.geometry.attributes.next.needsUpdate = true;\n    }\n\n    // Only need to call if not handling resolution uniforms manually\n    resize() {\n        // Update automatic uniforms if not overridden\n        if (this.resolution) this.resolution.value.set(this.gl.canvas.width, this.gl.canvas.height);\n        if (this.dpr) this.dpr.value = this.gl.renderer.dpr;\n    }\n}\n\nconst defaultVertex = /* glsl */ `\n    precision highp float;\n\n    attribute vec3 position;\n    attribute vec3 next;\n    attribute vec3 prev;\n    attribute vec2 uv;\n    attribute float side;\n\n    uniform mat4 modelViewMatrix;\n    uniform mat4 projectionMatrix;\n    uniform vec2 uResolution;\n    uniform float uDPR;\n    uniform float uThickness;\n    uniform float uMiter;\n\n    varying vec2 vUv;\n\n    vec4 getPosition() {\n        mat4 mvp = projectionMatrix * modelViewMatrix;\n        vec4 current = mvp * vec4(position, 1);\n        vec4 nextPos = mvp * vec4(next, 1);\n        vec4 prevPos = mvp * vec4(prev, 1);\n\n        vec2 aspect = vec2(uResolution.x / uResolution.y, 1);    \n        vec2 currentScreen = current.xy / current.w * aspect;\n        vec2 nextScreen = nextPos.xy / nextPos.w * aspect;\n        vec2 prevScreen = prevPos.xy / prevPos.w * aspect;\n    \n        vec2 dir1 = normalize(currentScreen - prevScreen);\n        vec2 dir2 = normalize(nextScreen - currentScreen);\n        vec2 dir = normalize(dir1 + dir2);\n    \n        vec2 normal = vec2(-dir.y, dir.x);\n        normal /= mix(1.0, max(0.3, dot(normal, vec2(-dir1.y, dir1.x))), uMiter);\n        normal /= aspect;\n\n        float pixelWidthRatio = 1.0 / (uResolution.y / uDPR);\n        float pixelWidth = current.w * pixelWidthRatio;\n        normal *= pixelWidth * uThickness;\n        current.xy -= normal * side;\n    \n        return current;\n    }\n\n    void main() {\n        vUv = uv;\n        gl_Position = getPosition();\n    }\n`;\n\nconst defaultFragment = /* glsl */ `\n    precision highp float;\n\n    uniform vec3 uColor;\n    \n    varying vec2 vUv;\n\n    void main() {\n        gl_FragColor.rgb = uColor;\n        gl_FragColor.a = 1.0;\n    }\n`;\n","// Define the AssetManifest interface\ntype AssetManifest = {\n  [key: string]: URL; // Keys are strings, and values are strings\n};\n\n// Define the AssetMap interface, which maps keys of AssetManifest to HTMLImagetement\ntype AssetMap<T extends Partial<AssetManifest>> = {\n  [K in keyof T]: HTMLImageElement;\n};\n\nexport const ERROR_IMAGE = new Image();\n\nexport function loadAssets<T extends AssetManifest>(manifest: T) {\n  return new Promise<AssetMap<T>>((resolve, reject) => {\n    let loadedAssets = {} as AssetMap<T>;\n\n    if (Object.keys(manifest).length === 0) {\n      resolve(loadedAssets);\n      return;\n    }\n\n    for (let [imageResourceName, imageURL] of Object.entries(manifest)) {\n      const image = new Image();\n      image.src = imageURL.href;\n      image.onload = () => {\n        loadedAssets[imageResourceName as keyof T] = image;\n        attemptFinishLoading();\n      };\n\n      image.onerror = () => {\n        loadedAssets[imageResourceName as keyof T] = ERROR_IMAGE;\n        attemptFinishLoading();\n      };\n    }\n\n    function attemptFinishLoading() {\n      const hasLoadedAll =\n        Object.keys(manifest).length === Object.keys(loadedAssets).length;\n\n      if (hasLoadedAll) {\n        resolve(loadedAssets);\n      }\n    }\n  });\n}\n","module.exports = require('./helpers/bundle-url').getBundleURL('171qT') + \"grid.0a94c637.png\" + \"?\" + Date.now();","\"use strict\";\n\nvar bundleURL = {};\nfunction getBundleURLCached(id) {\n  var value = bundleURL[id];\n  if (!value) {\n    value = getBundleURL();\n    bundleURL[id] = value;\n  }\n  return value;\n}\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      // The first two stack frames will be this function and getBundleURLCached.\n      // Use the 3rd one, which will be a runtime in the original bundle.\n      return getBaseURL(matches[2]);\n    }\n  }\n  return '/';\n}\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n}\n\n// TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\nfunction getOrigin(url) {\n  var matches = ('' + url).match(/(https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/[^/]+/);\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n  return matches[0];\n}\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","module.exports = require('./helpers/bundle-url').getBundleURL('171qT') + \"grid-blur.e9149559.png\" + \"?\" + Date.now();","import {\n  Color,\n  Geometry,\n  Mesh,\n  OGLRenderingContext,\n  Plane,\n  Polyline,\n  Program,\n  Transform,\n  Vec3,\n} from \"ogl\";\n\nimport FRAG from \"./PlotLine.frag\";\nimport VERT from \"./PlotLine.vert\";\nimport DEFAULT_VERT from \"../default.vert\";\nimport GLOW_MESH_FRAG from \"./PlotLineGlow.frag\";\n\nimport { createNoise2D } from \"simplex-noise\";\n\nconst noise2D = createNoise2D();\n\nexport class PlotLine {\n  private line: Polyline;\n  private scene: Transform;\n\n  private noiseOffset = Math.random() * 100;\n\n  // private shiftVelocity = 0.001 + 0.001 * Math.random();\n  private shiftVelocity = 0.002;\n  private graphOffset = 0;\n  constructor({\n    gl,\n    scene,\n    position,\n  }: {\n    position?: Vec3;\n    gl: OGLRenderingContext;\n    scene: Transform;\n  }) {\n    this.scene = scene;\n\n    const nodes = this.createPlotPoints({\n      getValue: (i) => noise2D(i * 0.19, this.noiseOffset) * 0.1,\n    });\n\n    const line = new Polyline(gl, {\n      points: nodes,\n      vertex: VERT,\n      fragment: FRAG,\n      uniforms: {\n        uColor: { value: new Color(\"#F00\") },\n        uThickness: { value: 2 },\n      },\n    });\n    this.line = line;\n    line.mesh.position = position || new Vec3();\n    const glowMeshProgram = new Program(gl, {\n      fragment: GLOW_MESH_FRAG,\n      vertex: DEFAULT_VERT,\n      // depthTest: false,\n      // transparent: true,\n    });\n\n    const glowMeshGeom = new Geometry(gl);\n    Object.assign(glowMeshGeom.attributes, line.geometry.attributes);\n\n    const glowMesh = new Mesh(gl, {\n      geometry: glowMeshGeom,\n      program: glowMeshProgram,\n    });\n\n    // glowMesh.position.z += 0.2;\n    // scene.addChild(glowMesh);\n\n    scene.addChild(line.mesh);\n  }\n\n  update() {\n    const line = this.line;\n\n    // shift every point on the line\n    const shouldSwap = line.points[0].x <= 0;\n    if (shouldSwap) this.graphOffset++;\n\n    for (let i = 0; i < line.points.length; i++) {\n      const isLast = i === line.points.length - 1;\n\n      if (shouldSwap && !isLast) {\n        line.points[i].y = line.points[i + 1].y;\n        line.points[i].x = line.points[i + 1].x;\n      }\n\n      if (shouldSwap && isLast) {\n        const value = noise2D(this.graphOffset * 0.19, this.noiseOffset) * 0.1;\n        line.points[i].y = value;\n        line.points[i].x = line.points.length * 0.1;\n      }\n\n      // shift horizontally\n      const pt = line.points[i];\n      pt.x -= this.shiftVelocity;\n    }\n\n    line.updateGeometry();\n  }\n\n  destroy() {\n    this.scene.removeChild(this.line.mesh);\n  }\n\n  private createPlotPoints({\n    counts = 32,\n    interval = 0.1,\n    getValue = (i) => 0,\n  }) {\n    const lineNodes = [];\n    for (let i = 0; i < counts; i++) {\n      lineNodes.push(new Vec3(interval * i, getValue(i), 0));\n    }\n    return lineNodes;\n  }\n}\n","precision highp float;\n\nuniform vec3 uColor;\n\nvarying vec2 vUv;\nvarying float vHeight;\nvarying float vDistFromOrigin;\n\nvoid main() {\n    // gl_FragColor.rgb = uColor\n    vec3 colorHigh = vec3(.3245, .5321, .1434);\n    vec3 colorLow = vec3(1.0, 0.1, 0.1);\n    float pct = vHeight;\n\n    gl_FragColor.rgb = mix(colorLow, colorHigh, pct);\n\n    gl_FragColor.rgb = mix(\n            gl_FragColor.rgb,\n            vec3(0.98, 0.9, 0.7),\n            clamp(2.0 + vDistFromOrigin * 3.0, 0.0, 1.0)\n        );\n\n    // the fading off effect, calc from the dist from origin of line\n    gl_FragColor.rgb = mix(\n            gl_FragColor.rgb,\n            vec3(1.0, 1.0, 1.0),\n            clamp(vDistFromOrigin * 2.0, 0.0, 1.0)\n        );\n    // gl_FragColor.rgb = vec3(pct);\n    gl_FragColor.a = vDistFromOrigin;\n}\n","precision highp float;\n\nattribute vec3 position;\nattribute vec3 next;\nattribute vec3 prev;\nattribute vec2 uv;\nattribute float side;\n\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform vec2 uResolution;\nuniform float uDPR;\nuniform float uThickness;\nuniform float uMiter;\n\nvarying vec2 vUv;\nvarying float vHeight;\nvarying float vDistFromOrigin;\n\nvec4 getPosition() {\n    mat4 mvp = projectionMatrix * modelViewMatrix;\n    vec4 current = mvp * vec4(position, 1);\n    vec4 nextPos = mvp * vec4(next, 1);\n    vec4 prevPos = mvp * vec4(prev, 1);\n\n    vec2 aspect = vec2(uResolution.x / uResolution.y, 1);\n    vec2 currentScreen = current.xy / current.w * aspect;\n    vec2 nextScreen = nextPos.xy / nextPos.w * aspect;\n    vec2 prevScreen = prevPos.xy / prevPos.w * aspect;\n\n    vec2 dir1 = normalize(currentScreen - prevScreen);\n    vec2 dir2 = normalize(nextScreen - currentScreen);\n    vec2 dir = normalize(dir1 + dir2);\n\n    vec2 normal = vec2(-dir.y, dir.x);\n    normal /= mix(1.0, max(0.3, dot(normal, vec2(-dir1.y, dir1.x))), uMiter);\n    normal /= aspect;\n\n    float pixelWidthRatio = 1.0 / (uResolution.y / uDPR);\n    float pixelWidth = current.w * pixelWidthRatio;\n    normal *= pixelWidth * uThickness;\n    current.xy -= normal * side;\n\n    return current;\n}\n\nvoid main() {\n    vUv = uv;\n    vHeight = position.y * 4.0 + .6;\n    vDistFromOrigin = 1.0 - position.x;\n    gl_Position = getPosition();\n}\n","precision highp float;\n\nvarying vec2 vUv;\n\nvoid main() {\n    gl_FragColor.rgb = vec3(.5);\n    gl_FragColor.a = 1.0;\n}\n",null,null,"attribute vec2 uv;\nattribute vec3 position;\n// attribute vec3 normal;\n\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\n// uniform mat3 normalMatrix;\n\nvarying vec2 vUv;\n// varying vec3 vNormal;\n\nvoid main() {\n    vUv = uv;\n    // vNormal = normalize(normalMatrix * normal);\n\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n}\n","import {\n  Mesh,\n  OGLRenderingContext,\n  Plane,\n  Program,\n  Texture,\n  Transform,\n} from \"ogl\";\nimport fragment from \"./Grid.frag\";\nimport vertex from \"./Grid.vert\";\n\nexport class Grid {\n  private mesh: Mesh;\n  private scene: Transform;\n  private offset = 0;\n  constructor({\n    gl,\n    scene,\n    image,\n  }: {\n    image: HTMLImageElement;\n    gl: OGLRenderingContext;\n    scene: Transform;\n  }) {\n    const texture = new Texture(gl, { image });\n    const plane = new Plane(gl);\n    const program = new Program(gl, {\n      fragment,\n      vertex,\n      uniforms: {\n        uTexture: { value: texture },\n        uOffset: { value: 0 },\n      },\n      transparent: true,\n    });\n    const mesh = new Mesh(gl, { geometry: plane, program });\n    mesh.rotation.x = -Math.PI * 0.5;\n    mesh.rotation.y = -Math.PI * 0.5;\n\n    mesh.position.y = -0.2;\n    mesh.position.x = -0.4;\n    mesh.position.z = -0.25;\n\n    mesh.scale.x = 2.0;\n    mesh.scale.y = 2.5;\n\n    this.mesh = mesh;\n    scene.addChild(mesh);\n    this.scene = scene;\n  }\n  update() {\n    this.mesh.program.uniforms.uOffset.value = this.offset;\n    this.offset += 0.0015;\n  }\n  destroy() {\n    this.scene.removeChild(this.mesh);\n  }\n}\n","precision highp float;\n\nuniform sampler2D uTexture;\nuniform float uOffset;\nvarying vec2 vUv;\n\nvoid main() {\n    vec2 uv = vUv;\n    vec4 color = texture2D(uTexture, fract((uv + vec2(0, uOffset / 2.0)) * 15.0));\n\n    // Fade effect along Y-axis\n    float fadeY = smoothstep(0.0, 0.2, vUv.y) * smoothstep(1.0, 0.8, vUv.y);\n\n    // Fade effect along X-axis\n    float fadeX = smoothstep(0.0, 0.3, vUv.x) * smoothstep(1.0, 0.7, vUv.x);\n\n    // Combine fades for both axes\n    float fade = fadeX * fadeY;\n    color.a *= fade;\n\n    // Make high green channel values transparent\n    if (color.g >= 0.9) {\n        color.a = 0.0;\n    }\n\n    gl_FragColor = color;\n}\n\n","precision highp float;\n\nattribute vec3 position;\nattribute vec2 uv;\n\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\n\nvarying vec2 vUv;\n\nvoid main() {\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n}\n"],"names":[],"version":3,"file":"index.6b815632.js.map","sourceRoot":"/__parcel_source_root/"}